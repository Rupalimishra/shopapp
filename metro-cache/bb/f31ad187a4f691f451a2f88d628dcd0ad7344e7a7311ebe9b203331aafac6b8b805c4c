{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/inherits","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"isAsync":false}},{"name":"fbjs/lib/invariant","data":{"isAsync":false}},{"name":"../core/AnimatedBlock","data":{"isAsync":false}},{"name":"../val","data":{"isAsync":false}},{"name":"./AnimatedNode","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.createAnimatedCond = createAnimatedCond;\n\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/createClass\"));\n\n  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/inherits\"));\n\n  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n\n  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/getPrototypeOf\"));\n\n  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"fbjs/lib/invariant\"));\n\n  var _AnimatedBlock = _$$_REQUIRE(_dependencyMap[7], \"../core/AnimatedBlock\");\n\n  var _val = _$$_REQUIRE(_dependencyMap[8], \"../val\");\n\n  var _AnimatedNode2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9], \"./AnimatedNode\"));\n\n  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\n  function _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n  var AnimatedCond = function (_AnimatedNode) {\n    (0, _inherits2.default)(AnimatedCond, _AnimatedNode);\n\n    var _super = _createSuper(AnimatedCond);\n\n    function AnimatedCond(condition, ifBlock, elseBlock) {\n      var _this;\n\n      (0, _classCallCheck2.default)(this, AnimatedCond);\n      (0, _invariant.default)(condition instanceof _AnimatedNode2.default, \"Reanimated: Animated.cond node first argument should be of type AnimatedNode but got \" + condition);\n      (0, _invariant.default)(ifBlock instanceof _AnimatedNode2.default, \"Reanimated: Animated.cond node second argument should be of type AnimatedNode but got \" + ifBlock);\n      (0, _invariant.default)(elseBlock instanceof _AnimatedNode2.default || elseBlock === undefined, \"Reanimated: Animated.cond node third argument should be of type AnimatedNode or should be undefined but got \" + elseBlock);\n      _this = _super.call(this, {\n        type: 'cond',\n        cond: condition,\n        ifBlock: ifBlock,\n        elseBlock: elseBlock\n      }, [condition, ifBlock, elseBlock]);\n      _this._condition = condition;\n      _this._ifBlock = ifBlock;\n      _this._elseBlock = elseBlock;\n      return _this;\n    }\n\n    (0, _createClass2.default)(AnimatedCond, [{\n      key: \"toString\",\n      value: function toString() {\n        return \"AnimatedCond, id: \" + this.__nodeID;\n      }\n    }, {\n      key: \"__onEvaluate\",\n      value: function __onEvaluate() {\n        if ((0, _val.val)(this._condition)) {\n          return (0, _val.val)(this._ifBlock);\n        } else {\n          return this._elseBlock !== undefined ? (0, _val.val)(this._elseBlock) : undefined;\n        }\n      }\n    }]);\n    return AnimatedCond;\n  }(_AnimatedNode2.default);\n\n  function createAnimatedCond(cond, ifBlock, elseBlock) {\n    return new AnimatedCond((0, _AnimatedBlock.adapt)(cond), (0, _AnimatedBlock.adapt)(ifBlock), elseBlock === undefined ? undefined : (0, _AnimatedBlock.adapt)(elseBlock));\n  }\n});","lineCount":76,"map":[[19,0,1,0],[21,0,2,0],[23,0,3,0],[25,0,4,0],[31,6,6,6,"AnimatedCond"],[31,18],[36,0,11,2],[36,26,11,14,"condition"],[36,35,11,2],[36,37,11,25,"ifBlock"],[36,44,11,2],[36,46,11,34,"elseBlock"],[36,55,11,2],[36,57,11,45],[37,0,11,45],[39,0,11,45],[40,0,12,4],[40,30,13,6,"condition"],[40,39,13,15],[40,51,13,27,"AnimatedNode"],[40,73,12,4],[40,165,14,94,"condition"],[40,174,12,4],[41,0,16,4],[41,30,17,6,"ifBlock"],[41,37,17,13],[41,49,17,25,"AnimatedNode"],[41,71,16,4],[41,164,18,95,"ifBlock"],[41,171,16,4],[42,0,20,4],[42,30,21,6,"elseBlock"],[42,39,21,15],[42,51,21,27,"AnimatedNode"],[42,73,21,6],[42,77,21,43,"elseBlock"],[42,86,21,52],[42,91,21,57,"undefined"],[42,100,20,4],[42,215,22,117,"elseBlock"],[42,224,20,4],[43,0,24,4],[43,32,25,6],[44,0,26,8,"type"],[44,8,26,8,"type"],[44,12,26,12],[44,14,26,14],[44,20,25,6],[45,0,27,8,"cond"],[45,8,27,8,"cond"],[45,12,27,12],[45,14,27,14,"condition"],[45,23,25,6],[46,0,28,8,"ifBlock"],[46,8,28,8,"ifBlock"],[46,15,28,15],[46,17,28,8,"ifBlock"],[46,24,25,6],[47,0,29,8,"elseBlock"],[47,8,29,8,"elseBlock"],[47,17,29,17],[47,19,29,8,"elseBlock"],[48,0,25,6],[48,7,24,4],[48,9,31,6],[48,10,31,7,"condition"],[48,19,31,6],[48,21,31,18,"ifBlock"],[48,28,31,6],[48,30,31,27,"elseBlock"],[48,39,31,6],[48,40,24,4],[49,0,33,4],[49,12,33,9,"_condition"],[49,22,33,4],[49,25,33,22,"condition"],[49,34,33,4],[50,0,34,4],[50,12,34,9,"_ifBlock"],[50,20,34,4],[50,23,34,20,"ifBlock"],[50,30,34,4],[51,0,35,4],[51,12,35,9,"_elseBlock"],[51,22,35,4],[51,25,35,22,"elseBlock"],[51,34,35,4],[52,0,11,45],[53,0,36,3],[57,33,38,13],[58,0,39,4],[58,38,39,32],[58,43,39,37,"__nodeID"],[58,51,39,4],[59,0,40,3],[62,37,42,17],[63,0,43,4],[63,12,43,8],[63,26,43,12],[63,31,43,17,"_condition"],[63,41,43,8],[63,42,43,4],[63,44,43,30],[64,0,44,6],[64,17,44,13],[64,31,44,17],[64,36,44,22,"_ifBlock"],[64,44,44,13],[64,45,44,6],[65,0,45,5],[65,9,43,4],[65,15,45,11],[66,0,46,6],[66,17,46,13],[66,22,46,18,"_elseBlock"],[66,32,46,13],[66,37,46,33,"undefined"],[66,46,46,13],[66,49,46,45],[66,63,46,49],[66,68,46,54,"_elseBlock"],[66,78,46,45],[66,79,46,13],[66,82,46,68,"undefined"],[66,91,46,6],[67,0,47,5],[68,0,48,3],[71,4,6,27,"AnimatedNode"],[71,26],[73,0,51,7],[73,11,51,16,"createAnimatedCond"],[73,29,51,7],[73,30,51,35,"cond"],[73,34,51,7],[73,36,51,41,"ifBlock"],[73,43,51,7],[73,45,51,50,"elseBlock"],[73,54,51,7],[73,56,51,61],[74,0,52,2],[74,11,52,9],[74,15,52,13,"AnimatedCond"],[74,27,52,9],[74,28,53,4],[74,54,53,10,"cond"],[74,58,53,4],[74,59,52,9],[74,61,54,4],[74,87,54,10,"ifBlock"],[74,94,54,4],[74,95,52,9],[74,97,55,4,"elseBlock"],[74,106,55,13],[74,111,55,18,"undefined"],[74,120,55,4],[74,123,55,30,"undefined"],[74,132,55,4],[74,135,55,42],[74,161,55,48,"elseBlock"],[74,170,55,42],[74,171,52,9],[74,172,52,2],[75,0,57,1]],"functionMap":{"names":["<global>","AnimatedCond","constructor","toString","__onEvaluate","createAnimatedCond"],"mappings":"AAA;ACK;ECK;GDyB;EEE;GFE;EGE;GHM;CDC;OKE;CLM"}},"type":"js/module"}]}