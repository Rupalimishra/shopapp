{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/inherits","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"isAsync":false}},{"name":"./AnimatedNode","data":{"isAsync":false}},{"name":"fbjs/lib/invariant","data":{"isAsync":false}},{"name":"../val","data":{"isAsync":false}},{"name":"../core/AnimatedBlock","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.createAnimatedSet = createAnimatedSet;\n\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/createClass\"));\n\n  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/inherits\"));\n\n  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n\n  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/getPrototypeOf\"));\n\n  var _AnimatedNode2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"./AnimatedNode\"));\n\n  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"fbjs/lib/invariant\"));\n\n  var _val = _$$_REQUIRE(_dependencyMap[8], \"../val\");\n\n  var _AnimatedBlock = _$$_REQUIRE(_dependencyMap[9], \"../core/AnimatedBlock\");\n\n  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\n  function _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n  var AnimatedSet = function (_AnimatedNode) {\n    (0, _inherits2.default)(AnimatedSet, _AnimatedNode);\n\n    var _super = _createSuper(AnimatedSet);\n\n    function AnimatedSet(what, value) {\n      var _this;\n\n      (0, _classCallCheck2.default)(this, AnimatedSet);\n      (0, _invariant.default)(what instanceof _AnimatedNode2.default, \"Reanimated: Animated.set first argument should be of type AnimatedNode but got \" + what);\n      (0, _invariant.default)(value instanceof _AnimatedNode2.default, \"Reanimated: Animated.set second argument should be of type AnimatedNode, String or Number but got \" + value);\n      _this = _super.call(this, {\n        type: 'set',\n        what: what,\n        value: value\n      }, [value]);\n      (0, _invariant.default)(!what._constant, 'Value to be set cannot be constant');\n      _this._what = what;\n      _this._value = value;\n      return _this;\n    }\n\n    (0, _createClass2.default)(AnimatedSet, [{\n      key: \"toString\",\n      value: function toString() {\n        return \"AnimatedSet, id: \" + this.__nodeID;\n      }\n    }, {\n      key: \"__onEvaluate\",\n      value: function __onEvaluate() {\n        var newValue = (0, _val.val)(this._value);\n\n        this._what.setValue(newValue);\n\n        return newValue;\n      }\n    }]);\n    return AnimatedSet;\n  }(_AnimatedNode2.default);\n\n  function createAnimatedSet(what, value) {\n    return new AnimatedSet(what, (0, _AnimatedBlock.adapt)(value));\n  }\n});","lineCount":74,"map":[[19,0,1,0],[21,0,2,0],[23,0,3,0],[25,0,4,0],[31,6,6,6,"AnimatedSet"],[31,17],[36,0,10,2],[36,25,10,14,"what"],[36,29,10,2],[36,31,10,20,"value"],[36,36,10,2],[36,38,10,27],[37,0,10,27],[39,0,10,27],[40,0,11,4],[40,30,12,6,"what"],[40,34,12,10],[40,46,12,22,"AnimatedNode"],[40,68,11,4],[40,154,13,88,"what"],[40,158,11,4],[41,0,15,4],[41,30,16,6,"value"],[41,35,16,11],[41,47,16,23,"AnimatedNode"],[41,69,15,4],[41,174,17,107,"value"],[41,179,15,4],[42,0,19,4],[42,32,19,10],[43,0,19,12,"type"],[43,8,19,12,"type"],[43,12,19,16],[43,14,19,18],[43,19,19,10],[44,0,19,25,"what"],[44,8,19,25,"what"],[44,12,19,29],[44,14,19,25,"what"],[44,18,19,10],[45,0,19,31,"value"],[45,8,19,31,"value"],[45,13,19,36],[45,15,19,31,"value"],[46,0,19,10],[46,7,19,4],[46,9,19,40],[46,10,19,41,"value"],[46,15,19,40],[46,16,19,4],[47,0,20,4],[47,30,20,14],[47,31,20,15,"what"],[47,35,20,19],[47,36,20,20,"_constant"],[47,45,20,4],[47,47,20,31],[47,83,20,4],[48,0,21,4],[48,12,21,9,"_what"],[48,17,21,4],[48,20,21,17,"what"],[48,24,21,4],[49,0,22,4],[49,12,22,9,"_value"],[49,18,22,4],[49,21,22,18,"value"],[49,26,22,4],[50,0,10,27],[51,0,23,3],[55,33,25,13],[56,0,26,4],[56,37,26,31],[56,42,26,36,"__nodeID"],[56,50,26,4],[57,0,27,3],[60,37,29,17],[61,0,30,4],[61,12,30,10,"newValue"],[61,20,30,18],[61,23,30,21],[61,37,30,25],[61,42,30,30,"_value"],[61,48,30,21],[61,49,30,4],[63,0,31,4],[63,13,31,9,"_what"],[63,18,31,4],[63,19,31,15,"setValue"],[63,27,31,4],[63,28,31,24,"newValue"],[63,36,31,4],[65,0,32,4],[65,15,32,11,"newValue"],[65,23,32,4],[66,0,33,3],[69,4,6,26,"AnimatedNode"],[69,26],[71,0,36,7],[71,11,36,16,"createAnimatedSet"],[71,28,36,7],[71,29,36,34,"what"],[71,33,36,7],[71,35,36,40,"value"],[71,40,36,7],[71,42,36,47],[72,0,37,2],[72,11,37,9],[72,15,37,13,"AnimatedSet"],[72,26,37,9],[72,27,37,25,"what"],[72,31,37,9],[72,33,37,31],[72,59,37,37,"value"],[72,64,37,31],[72,65,37,9],[72,66,37,2],[73,0,38,1]],"functionMap":{"names":["<global>","AnimatedSet","constructor","toString","__onEvaluate","createAnimatedSet"],"mappings":"AAA;ACK;ECI;GDa;EEE;GFE;EGE;GHI;CDC;OKE;CLE"}},"type":"js/module"}]}