{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/inherits","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"isAsync":false}},{"name":"../core/InternalAnimatedValue","data":{"isAsync":false}},{"name":"./Animation","data":{"isAsync":false}},{"name":"../SpringConfig","data":{"isAsync":false}},{"name":"./spring","data":{"isAsync":false}},{"name":"../base","data":{"isAsync":false}},{"name":"../core/AnimatedClock","data":{"isAsync":false}},{"name":"fbjs/lib/invariant","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/createClass\"));\n\n  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/inherits\"));\n\n  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n\n  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/getPrototypeOf\"));\n\n  var _InternalAnimatedValue = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"../core/InternalAnimatedValue\"));\n\n  var _Animation2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"./Animation\"));\n\n  var _SpringConfig = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8], \"../SpringConfig\"));\n\n  var _spring = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9], \"./spring\"));\n\n  var _base = _$$_REQUIRE(_dependencyMap[10], \"../base\");\n\n  var _AnimatedClock = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11], \"../core/AnimatedClock\"));\n\n  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12], \"fbjs/lib/invariant\"));\n\n  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\n  function _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n  function withDefault(value, defaultValue) {\n    if (value === undefined || value === null) {\n      return defaultValue;\n    }\n\n    return value;\n  }\n\n  var SpringAnimation = function (_Animation) {\n    (0, _inherits2.default)(SpringAnimation, _Animation);\n\n    var _super = _createSuper(SpringAnimation);\n\n    function SpringAnimation(config) {\n      var _this;\n\n      (0, _classCallCheck2.default)(this, SpringAnimation);\n      _this = _super.call(this);\n      _this._overshootClamping = withDefault(config.overshootClamping, false);\n      _this._restDisplacementThreshold = withDefault(config.restDisplacementThreshold, 0.001);\n      _this._restSpeedThreshold = withDefault(config.restSpeedThreshold, 0.001);\n      _this._initialVelocity = withDefault(config.velocity, 0);\n      _this._lastVelocity = withDefault(config.velocity, 0);\n      _this._toValue = config.toValue;\n      _this._delay = withDefault(config.delay, 0);\n\n      if (config.stiffness !== undefined || config.damping !== undefined || config.mass !== undefined) {\n        (0, _invariant.default)(config.bounciness === undefined && config.speed === undefined && config.tension === undefined && config.friction === undefined, 'You can define one of bounciness/speed, tension/friction, or stiffness/damping/mass, but not more than one');\n        _this._stiffness = withDefault(config.stiffness, 100);\n        _this._damping = withDefault(config.damping, 10);\n        _this._mass = withDefault(config.mass, 1);\n      } else if (config.bounciness !== undefined || config.speed !== undefined) {\n        (0, _invariant.default)(config.tension === undefined && config.friction === undefined && config.stiffness === undefined && config.damping === undefined && config.mass === undefined, 'You can define one of bounciness/speed, tension/friction, or stiffness/damping/mass, but not more than one');\n\n        var springConfig = _SpringConfig.default.fromBouncinessAndSpeed(withDefault(config.bounciness, 8), withDefault(config.speed, 12));\n\n        _this._stiffness = springConfig.stiffness;\n        _this._damping = springConfig.damping;\n        _this._mass = 1;\n      } else {\n        var _springConfig = _SpringConfig.default.fromOrigamiTensionAndFriction(withDefault(config.tension, 40), withDefault(config.friction, 7));\n\n        _this._stiffness = _springConfig.stiffness;\n        _this._damping = _springConfig.damping;\n        _this._mass = 1;\n      }\n\n      (0, _invariant.default)(_this._stiffness > 0, 'Stiffness value must be greater than 0');\n      (0, _invariant.default)(_this._damping > 0, 'Damping value must be greater than 0');\n      (0, _invariant.default)(_this._mass > 0, 'Mass value must be greater than 0');\n      return _this;\n    }\n\n    (0, _createClass2.default)(SpringAnimation, [{\n      key: \"start\",\n      value: function start(value) {\n        this._clock = new _AnimatedClock.default();\n        var state = {\n          finished: new _InternalAnimatedValue.default(0),\n          velocity: new _InternalAnimatedValue.default(this._initialVelocity),\n          position: value,\n          time: new _InternalAnimatedValue.default(0)\n        };\n        var config = {\n          damping: this._damping,\n          mass: this._mass,\n          stiffness: this._stiffness,\n          toValue: this._toValue,\n          overshootClamping: this._overshootClamping,\n          restSpeedThreshold: this._restSpeedThreshold,\n          restDisplacementThreshold: this._restDisplacementThreshold\n        };\n        return (0, _base.block)([(0, _base.cond)((0, _base.clockRunning)(this._clock), 0, [(0, _base.startClock)(this._clock)]), (0, _spring.default)(this._clock, state, config), (0, _base.cond)(state.finished, (0, _base.stopClock)(this._clock))]);\n      }\n    }, {\n      key: \"stop\",\n      value: function stop() {}\n    }], [{\n      key: \"getDefaultState\",\n      value: function getDefaultState() {\n        return {\n          position: new _InternalAnimatedValue.default(0),\n          finished: new _InternalAnimatedValue.default(0),\n          velocity: new _InternalAnimatedValue.default(0),\n          time: new _InternalAnimatedValue.default(0)\n        };\n      }\n    }]);\n    return SpringAnimation;\n  }(_Animation2.default);\n\n  exports.default = SpringAnimation;\n});","lineCount":129,"map":[[19,0,1,0],[21,0,2,0],[23,0,3,0],[25,0,4,0],[27,0,6,0],[29,0,7,0],[31,0,9,0],[37,0,11,0],[37,11,11,9,"withDefault"],[37,22,11,0],[37,23,11,21,"value"],[37,28,11,0],[37,30,11,28,"defaultValue"],[37,42,11,0],[37,44,11,42],[38,0,12,2],[38,8,12,6,"value"],[38,13,12,11],[38,18,12,16,"undefined"],[38,27,12,6],[38,31,12,29,"value"],[38,36,12,34],[38,41,12,39],[38,45,12,2],[38,47,12,45],[39,0,13,4],[39,13,13,11,"defaultValue"],[39,25,13,4],[40,0,14,3],[42,0,15,2],[42,11,15,9,"value"],[42,16,15,2],[43,0,16,1],[45,6,18,21,"SpringAnimation"],[45,21],[50,0,19,2],[50,29,19,14,"config"],[50,35,19,2],[50,37,19,22],[51,0,19,22],[53,0,19,22],[54,0,20,4],[55,0,22,4],[55,12,22,9,"_overshootClamping"],[55,30,22,4],[55,33,22,30,"withDefault"],[55,44,22,41],[55,45,22,42,"config"],[55,51,22,48],[55,52,22,49,"overshootClamping"],[55,69,22,41],[55,71,22,68],[55,76,22,41],[55,77,22,4],[56,0,23,4],[56,12,23,9,"_restDisplacementThreshold"],[56,38,23,4],[56,41,23,38,"withDefault"],[56,52,23,49],[56,53,24,6,"config"],[56,59,24,12],[56,60,24,13,"restDisplacementThreshold"],[56,85,23,49],[56,87,25,6],[56,92,23,49],[56,93,23,4],[57,0,27,4],[57,12,27,9,"_restSpeedThreshold"],[57,31,27,4],[57,34,27,31,"withDefault"],[57,45,27,42],[57,46,27,43,"config"],[57,52,27,49],[57,53,27,50,"restSpeedThreshold"],[57,71,27,42],[57,73,27,70],[57,78,27,42],[57,79,27,4],[58,0,28,4],[58,12,28,9,"_initialVelocity"],[58,28,28,4],[58,31,28,28,"withDefault"],[58,42,28,39],[58,43,28,40,"config"],[58,49,28,46],[58,50,28,47,"velocity"],[58,58,28,39],[58,60,28,57],[58,61,28,39],[58,62,28,4],[59,0,29,4],[59,12,29,9,"_lastVelocity"],[59,25,29,4],[59,28,29,25,"withDefault"],[59,39,29,36],[59,40,29,37,"config"],[59,46,29,43],[59,47,29,44,"velocity"],[59,55,29,36],[59,57,29,54],[59,58,29,36],[59,59,29,4],[60,0,30,4],[60,12,30,9,"_toValue"],[60,20,30,4],[60,23,30,20,"config"],[60,29,30,26],[60,30,30,27,"toValue"],[60,37,30,4],[61,0,31,4],[61,12,31,9,"_delay"],[61,18,31,4],[61,21,31,18,"withDefault"],[61,32,31,29],[61,33,31,30,"config"],[61,39,31,36],[61,40,31,37,"delay"],[61,45,31,29],[61,47,31,44],[61,48,31,29],[61,49,31,4],[63,0,33,4],[63,10,34,6,"config"],[63,16,34,12],[63,17,34,13,"stiffness"],[63,26,34,6],[63,31,34,27,"undefined"],[63,40,34,6],[63,44,35,6,"config"],[63,50,35,12],[63,51,35,13,"damping"],[63,58,35,6],[63,63,35,25,"undefined"],[63,72,34,6],[63,76,36,6,"config"],[63,82,36,12],[63,83,36,13,"mass"],[63,87,36,6],[63,92,36,22,"undefined"],[63,101,33,4],[63,103,37,6],[64,0,38,6],[64,32,39,8,"config"],[64,38,39,14],[64,39,39,15,"bounciness"],[64,49,39,8],[64,54,39,30,"undefined"],[64,63,39,8],[64,67,40,10,"config"],[64,73,40,16],[64,74,40,17,"speed"],[64,79,40,10],[64,84,40,27,"undefined"],[64,93,39,8],[64,97,41,10,"config"],[64,103,41,16],[64,104,41,17,"tension"],[64,111,41,10],[64,116,41,29,"undefined"],[64,125,39,8],[64,129,42,10,"config"],[64,135,42,16],[64,136,42,17,"friction"],[64,144,42,10],[64,149,42,30,"undefined"],[64,158,38,6],[64,160,43,8],[64,268,38,6],[65,0,45,6],[65,14,45,11,"_stiffness"],[65,24,45,6],[65,27,45,24,"withDefault"],[65,38,45,35],[65,39,45,36,"config"],[65,45,45,42],[65,46,45,43,"stiffness"],[65,55,45,35],[65,57,45,54],[65,60,45,35],[65,61,45,6],[66,0,46,6],[66,14,46,11,"_damping"],[66,22,46,6],[66,25,46,22,"withDefault"],[66,36,46,33],[66,37,46,34,"config"],[66,43,46,40],[66,44,46,41,"damping"],[66,51,46,33],[66,53,46,50],[66,55,46,33],[66,56,46,6],[67,0,47,6],[67,14,47,11,"_mass"],[67,19,47,6],[67,22,47,19,"withDefault"],[67,33,47,30],[67,34,47,31,"config"],[67,40,47,37],[67,41,47,38,"mass"],[67,45,47,30],[67,47,47,44],[67,48,47,30],[67,49,47,6],[68,0,48,5],[68,7,33,4],[68,13,48,11],[68,17,48,15,"config"],[68,23,48,21],[68,24,48,22,"bounciness"],[68,34,48,15],[68,39,48,37,"undefined"],[68,48,48,15],[68,52,48,50,"config"],[68,58,48,56],[68,59,48,57,"speed"],[68,64,48,50],[68,69,48,67,"undefined"],[68,78,48,11],[68,80,48,78],[69,0,51,6],[69,32,52,8,"config"],[69,38,52,14],[69,39,52,15,"tension"],[69,46,52,8],[69,51,52,27,"undefined"],[69,60,52,8],[69,64,53,10,"config"],[69,70,53,16],[69,71,53,17,"friction"],[69,79,53,10],[69,84,53,30,"undefined"],[69,93,52,8],[69,97,54,10,"config"],[69,103,54,16],[69,104,54,17,"stiffness"],[69,113,54,10],[69,118,54,31,"undefined"],[69,127,52,8],[69,131,55,10,"config"],[69,137,55,16],[69,138,55,17,"damping"],[69,145,55,10],[69,150,55,29,"undefined"],[69,159,52,8],[69,163,56,10,"config"],[69,169,56,16],[69,170,56,17,"mass"],[69,174,56,10],[69,179,56,26,"undefined"],[69,188,51,6],[69,190,57,8],[69,298,51,6],[71,0,59,6],[71,12,59,12,"springConfig"],[71,24,59,24],[71,27,59,27,"SpringConfig"],[71,49,59,40,"fromBouncinessAndSpeed"],[71,71,59,27],[71,72,60,8,"withDefault"],[71,83,60,19],[71,84,60,20,"config"],[71,90,60,26],[71,91,60,27,"bounciness"],[71,101,60,19],[71,103,60,39],[71,104,60,19],[71,105,59,27],[71,107,61,8,"withDefault"],[71,118,61,19],[71,119,61,20,"config"],[71,125,61,26],[71,126,61,27,"speed"],[71,131,61,19],[71,133,61,34],[71,135,61,19],[71,136,59,27],[71,137,59,6],[73,0,63,6],[73,14,63,11,"_stiffness"],[73,24,63,6],[73,27,63,24,"springConfig"],[73,39,63,36],[73,40,63,37,"stiffness"],[73,49,63,6],[74,0,64,6],[74,14,64,11,"_damping"],[74,22,64,6],[74,25,64,22,"springConfig"],[74,37,64,34],[74,38,64,35,"damping"],[74,45,64,6],[75,0,65,6],[75,14,65,11,"_mass"],[75,19,65,6],[75,22,65,19],[75,23,65,6],[76,0,66,5],[76,7,48,11],[76,13,66,11],[77,0,69,6],[77,12,69,12,"springConfig"],[77,25,69,24],[77,28,69,27,"SpringConfig"],[77,50,69,40,"fromOrigamiTensionAndFriction"],[77,79,69,27],[77,80,70,8,"withDefault"],[77,91,70,19],[77,92,70,20,"config"],[77,98,70,26],[77,99,70,27,"tension"],[77,106,70,19],[77,108,70,36],[77,110,70,19],[77,111,69,27],[77,113,71,8,"withDefault"],[77,124,71,19],[77,125,71,20,"config"],[77,131,71,26],[77,132,71,27,"friction"],[77,140,71,19],[77,142,71,37],[77,143,71,19],[77,144,69,27],[77,145,69,6],[79,0,73,6],[79,14,73,11,"_stiffness"],[79,24,73,6],[79,27,73,24,"springConfig"],[79,40,73,36],[79,41,73,37,"stiffness"],[79,50,73,6],[80,0,74,6],[80,14,74,11,"_damping"],[80,22,74,6],[80,25,74,22,"springConfig"],[80,38,74,34],[80,39,74,35,"damping"],[80,46,74,6],[81,0,75,6],[81,14,75,11,"_mass"],[81,19,75,6],[81,22,75,19],[81,23,75,6],[82,0,76,5],[84,0,78,4],[84,30,78,14],[84,36,78,19,"_stiffness"],[84,46,78,14],[84,49,78,32],[84,50,78,4],[84,52,78,35],[84,92,78,4],[85,0,79,4],[85,30,79,14],[85,36,79,19,"_damping"],[85,44,79,14],[85,47,79,30],[85,48,79,4],[85,50,79,33],[85,88,79,4],[86,0,80,4],[86,30,80,14],[86,36,80,19,"_mass"],[86,41,80,14],[86,44,80,27],[86,45,80,4],[86,47,80,30],[86,82,80,4],[87,0,19,22],[88,0,81,3],[92,28,83,8,"value"],[92,33],[92,35,83,15],[93,0,84,4],[93,13,84,9,"_clock"],[93,19,84,4],[93,22,84,18],[93,26,84,22,"Clock"],[93,48,84,18],[93,50,84,4],[94,0,85,4],[94,12,85,10,"state"],[94,17,85,15],[94,20,85,18],[95,0,86,6,"finished"],[95,10,86,6,"finished"],[95,18,86,14],[95,20,86,16],[95,24,86,20,"AnimatedValue"],[95,54,86,16],[95,55,86,34],[95,56,86,16],[95,57,85,18],[96,0,87,6,"velocity"],[96,10,87,6,"velocity"],[96,18,87,14],[96,20,87,16],[96,24,87,20,"AnimatedValue"],[96,54,87,16],[96,55,87,34],[96,60,87,39,"_initialVelocity"],[96,76,87,16],[96,77,85,18],[97,0,88,6,"position"],[97,10,88,6,"position"],[97,18,88,14],[97,20,88,16,"value"],[97,25,85,18],[98,0,89,6,"time"],[98,10,89,6,"time"],[98,14,89,10],[98,16,89,12],[98,20,89,16,"AnimatedValue"],[98,50,89,12],[98,51,89,30],[98,52,89,12],[99,0,85,18],[99,9,85,4],[100,0,92,4],[100,12,92,10,"config"],[100,18,92,16],[100,21,92,19],[101,0,93,6,"damping"],[101,10,93,6,"damping"],[101,17,93,13],[101,19,93,15],[101,24,93,20,"_damping"],[101,32,92,19],[102,0,94,6,"mass"],[102,10,94,6,"mass"],[102,14,94,10],[102,16,94,12],[102,21,94,17,"_mass"],[102,26,92,19],[103,0,95,6,"stiffness"],[103,10,95,6,"stiffness"],[103,19,95,15],[103,21,95,17],[103,26,95,22,"_stiffness"],[103,36,92,19],[104,0,96,6,"toValue"],[104,10,96,6,"toValue"],[104,17,96,13],[104,19,96,15],[104,24,96,20,"_toValue"],[104,32,92,19],[105,0,97,6,"overshootClamping"],[105,10,97,6,"overshootClamping"],[105,27,97,23],[105,29,97,25],[105,34,97,30,"_overshootClamping"],[105,52,92,19],[106,0,98,6,"restSpeedThreshold"],[106,10,98,6,"restSpeedThreshold"],[106,28,98,24],[106,30,98,26],[106,35,98,31,"_restSpeedThreshold"],[106,54,92,19],[107,0,99,6,"restDisplacementThreshold"],[107,10,99,6,"restDisplacementThreshold"],[107,35,99,31],[107,37,99,33],[107,42,99,38,"_restDisplacementThreshold"],[108,0,92,19],[108,9,92,4],[109,0,102,4],[109,15,102,11],[109,32,102,17],[109,33,103,6],[109,49,103,11],[109,73,103,24],[109,78,103,29,"_clock"],[109,84,103,11],[109,85,103,6],[109,87,103,38],[109,88,103,6],[109,90,103,41],[109,91,103,42],[109,113,103,53],[109,118,103,58,"_clock"],[109,124,103,42],[109,125,103,41],[109,126,103,6],[109,127,102,17],[109,129,104,6],[109,150,104,13],[109,155,104,18,"_clock"],[109,161,104,6],[109,163,104,26,"state"],[109,168,104,6],[109,170,104,33,"config"],[109,176,104,6],[109,177,102,17],[109,179,105,6],[109,195,105,11,"state"],[109,200,105,16],[109,201,105,17,"finished"],[109,209,105,6],[109,211,105,27],[109,232,105,37],[109,237,105,42,"_clock"],[109,243,105,27],[109,244,105,6],[109,245,102,17],[109,246,102,11],[109,247,102,4],[110,0,107,3],[113,29,109,9],[113,30,111,3],[116,40,113,27],[117,0,114,4],[117,15,114,11],[118,0,115,6,"position"],[118,10,115,6,"position"],[118,18,115,14],[118,20,115,16],[118,24,115,20,"AnimatedValue"],[118,54,115,16],[118,55,115,34],[118,56,115,16],[118,57,114,11],[119,0,116,6,"finished"],[119,10,116,6,"finished"],[119,18,116,14],[119,20,116,16],[119,24,116,20,"AnimatedValue"],[119,54,116,16],[119,55,116,34],[119,56,116,16],[119,57,114,11],[120,0,117,6,"velocity"],[120,10,117,6,"velocity"],[120,18,117,14],[120,20,117,16],[120,24,117,20,"AnimatedValue"],[120,54,117,16],[120,55,117,34],[120,56,117,16],[120,57,114,11],[121,0,118,6,"time"],[121,10,118,6,"time"],[121,14,118,10],[121,16,118,12],[121,20,118,16,"AnimatedValue"],[121,50,118,12],[121,51,118,30],[121,52,118,12],[122,0,114,11],[122,9,114,4],[123,0,120,3],[126,4,18,45,"Animation"],[126,23]],"functionMap":{"names":["<global>","withDefault","SpringAnimation","constructor","start","stop","getDefaultState"],"mappings":"AAA;ACU;CDK;eEE;ECC;GD8D;EEE;GFwB;EGE;GHE;EIE;GJO;CFC"}},"type":"js/module"}]}