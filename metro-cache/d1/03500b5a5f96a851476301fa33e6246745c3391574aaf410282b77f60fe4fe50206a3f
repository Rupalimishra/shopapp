{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/inherits","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"isAsync":false}},{"name":"fbjs/lib/invariant","data":{"isAsync":false}},{"name":"../core/AnimatedBlock","data":{"isAsync":false}},{"name":"./AnimatedNode","data":{"isAsync":false}},{"name":"../val","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.createAnimatedConcat = createAnimatedConcat;\n\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/createClass\"));\n\n  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/inherits\"));\n\n  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n\n  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/getPrototypeOf\"));\n\n  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"fbjs/lib/invariant\"));\n\n  var _AnimatedBlock = _$$_REQUIRE(_dependencyMap[7], \"../core/AnimatedBlock\");\n\n  var _AnimatedNode2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8], \"./AnimatedNode\"));\n\n  var _val = _$$_REQUIRE(_dependencyMap[9], \"../val\");\n\n  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\n  function _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n  var AnimatedConcat = function (_AnimatedNode) {\n    (0, _inherits2.default)(AnimatedConcat, _AnimatedNode);\n\n    var _super = _createSuper(AnimatedConcat);\n\n    function AnimatedConcat(input) {\n      var _this;\n\n      (0, _classCallCheck2.default)(this, AnimatedConcat);\n      (0, _invariant.default)(input.every(function (el) {\n        return el instanceof _AnimatedNode2.default || typeof el === 'number' || typeof el === 'string';\n      }), \"Reanimated: Animated.concat node arguments should be of type AnimatedNode or String or Number. One or more of them are not of that type. Node: \" + input);\n      _this = _super.call(this, {\n        type: 'concat',\n        input: input\n      }, input);\n      _this._input = input;\n      return _this;\n    }\n\n    (0, _createClass2.default)(AnimatedConcat, [{\n      key: \"__onEvaluate\",\n      value: function __onEvaluate() {\n        return this._input.reduce(function (prev, current) {\n          return prev + (0, _val.val)(current);\n        }, '');\n      }\n    }, {\n      key: \"toString\",\n      value: function toString() {\n        return \"AnimatedConcat, id: \" + this.__nodeID;\n      }\n    }]);\n    return AnimatedConcat;\n  }(_AnimatedNode2.default);\n\n  function createAnimatedConcat() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return new AnimatedConcat(args.map(_AnimatedBlock.adapt));\n  }\n});","lineCount":74,"map":[[19,0,1,0],[21,0,2,0],[23,0,3,0],[25,0,4,0],[31,6,6,6,"AnimatedConcat"],[31,20],[36,0,7,2],[36,28,7,14,"input"],[36,33,7,2],[36,35,7,21],[37,0,7,21],[39,0,7,21],[40,0,8,4],[40,30,9,6,"input"],[40,35,9,11],[40,36,9,12,"every"],[40,41,9,6],[40,42,10,8],[40,52,10,8,"el"],[40,54,10,10],[41,0,10,10],[41,15,11,10,"el"],[41,17,11,12],[41,29,11,24,"AnimatedNode"],[41,51,11,10],[41,55,12,10],[41,62,12,17,"el"],[41,64,12,10],[41,69,12,24],[41,77,11,10],[41,81,13,10],[41,88,13,17,"el"],[41,90,13,10],[41,95,13,24],[41,103,10,10],[42,0,10,10],[42,7,9,6],[42,8,8,4],[42,158,15,152,"input"],[42,163,8,4],[43,0,17,4],[43,32,17,10],[44,0,17,12,"type"],[44,8,17,12,"type"],[44,12,17,16],[44,14,17,18],[44,22,17,10],[45,0,17,28,"input"],[45,8,17,28,"input"],[45,13,17,33],[45,15,17,28,"input"],[46,0,17,10],[46,7,17,4],[46,9,17,37,"input"],[46,14,17,4],[47,0,18,4],[47,12,18,9,"_input"],[47,18,18,4],[47,21,18,18,"input"],[47,26,18,4],[48,0,7,21],[49,0,19,3],[53,37,21,17],[54,0,22,4],[54,15,22,11],[54,20,22,16,"_input"],[54,26,22,11],[54,27,22,23,"reduce"],[54,33,22,11],[54,34,22,30],[54,44,22,31,"prev"],[54,48,22,30],[54,50,22,37,"current"],[54,57,22,30],[55,0,22,30],[55,17,22,49,"prev"],[55,21,22,53],[55,24,22,56],[55,38,22,60,"current"],[55,45,22,56],[55,46,22,30],[56,0,22,30],[56,9,22,11],[56,11,22,70],[56,13,22,11],[56,14,22,4],[57,0,23,3],[60,33,25,13],[61,0,26,4],[61,40,26,34],[61,45,26,39,"__nodeID"],[61,53,26,4],[62,0,27,3],[65,4,6,29,"AnimatedNode"],[65,26],[67,0,30,7],[67,11,30,16,"createAnimatedConcat"],[67,31,30,7],[67,34,30,46],[68,0,30,46],[68,38,30,40,"args"],[68,42,30,46],[69,0,30,40,"args"],[69,6,30,40,"args"],[69,10,30,46],[70,0,30,46],[72,0,31,2],[72,11,31,9],[72,15,31,13,"AnimatedConcat"],[72,29,31,9],[72,30,31,28,"args"],[72,34,31,32],[72,35,31,33,"map"],[72,38,31,28],[72,39,31,37,"adapt"],[72,59,31,28],[72,60,31,9],[72,61,31,2],[73,0,32,1]],"functionMap":{"names":["<global>","AnimatedConcat","constructor","input.every$argument_0","__onEvaluate","_input.reduce$argument_0","toString","createAnimatedConcat"],"mappings":"AAA;ACK;ECC;QCG;gCDG;GDM;EGE;8BCC,sCD;GHC;EKE;GLE;CDC;OOE;CPE"}},"type":"js/module"}]}