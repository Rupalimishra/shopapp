{"dependencies":[],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var validateFormat = function validateFormat() {};\n\n  if (process.env.NODE_ENV !== 'production') {\n    validateFormat = function validateFormat(format) {\n      if (format === undefined) {\n        throw new Error('invariant requires an error message argument');\n      }\n    };\n  }\n\n  function invariant(condition, format) {\n    for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n      args[_key - 2] = arguments[_key];\n    }\n\n    validateFormat(format);\n\n    if (!condition) {\n      var error;\n\n      if (format === undefined) {\n        error = new Error('Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.');\n      } else {\n        var argIndex = 0;\n        error = new Error(format.replace(/%s/g, function () {\n          return args[argIndex++];\n        }));\n        error.name = 'Invariant Violation';\n      }\n\n      error.framesToPop = 1;\n      throw error;\n    }\n  }\n\n  var _default = invariant;\n  exports.default = _default;\n});","lineCount":44,"map":[[7,0,11,0],[7,6,11,4,"validateFormat"],[7,20,11,18],[7,23,11,21],[7,32,11,30,"validateFormat"],[7,46,11,21],[7,49,11,47],[7,50,11,49],[7,51,11,0],[9,0,13,0],[9,6,13,4,"process"],[9,13,13,11],[9,14,13,12,"env"],[9,17,13,4],[9,18,13,16,"NODE_ENV"],[9,26,13,4],[9,31,13,29],[9,43,13,0],[9,45,13,43],[10,0,14,2,"validateFormat"],[10,4,14,2,"validateFormat"],[10,18,14,16],[10,21,14,19],[10,30,14,28,"validateFormat"],[10,44,14,19],[10,45,14,43,"format"],[10,51,14,19],[10,53,14,51],[11,0,15,4],[11,10,15,8,"format"],[11,16,15,14],[11,21,15,19,"undefined"],[11,30,15,4],[11,32,15,30],[12,0,16,6],[12,14,16,12],[12,18,16,16,"Error"],[12,23,16,12],[12,24,16,22],[12,70,16,12],[12,71,16,6],[13,0,17,5],[14,0,18,3],[14,5,14,2],[15,0,19,1],[17,0,21,0],[17,11,21,9,"invariant"],[17,20,21,0],[17,21,21,19,"condition"],[17,30,21,0],[17,32,21,30,"format"],[17,38,21,0],[17,40,21,47],[18,0,21,47],[18,38,21,41,"args"],[18,42,21,47],[19,0,21,41,"args"],[19,6,21,41,"args"],[19,10,21,47],[20,0,21,47],[22,0,22,2,"validateFormat"],[22,4,22,2,"validateFormat"],[22,18,22,16],[22,19,22,17,"format"],[22,25,22,16],[22,26,22,2],[24,0,24,2],[24,8,24,6],[24,9,24,7,"condition"],[24,18,24,2],[24,20,24,18],[25,0,25,4],[25,10,25,8,"error"],[25,15,25,4],[27,0,27,4],[27,10,27,8,"format"],[27,16,27,14],[27,21,27,19,"undefined"],[27,30,27,4],[27,32,27,30],[28,0,28,6,"error"],[28,8,28,6,"error"],[28,13,28,11],[28,16,28,14],[28,20,28,18,"Error"],[28,25,28,14],[28,26,28,24],[28,153,28,14],[28,154,28,6],[29,0,29,5],[29,7,27,4],[29,13,29,11],[30,0,30,6],[30,12,30,10,"argIndex"],[30,20,30,18],[30,23,30,21],[30,24,30,6],[31,0,31,6,"error"],[31,8,31,6,"error"],[31,13,31,11],[31,16,31,14],[31,20,31,18,"Error"],[31,25,31,14],[31,26,31,24,"format"],[31,32,31,30],[31,33,31,31,"replace"],[31,40,31,24],[31,41,31,39],[31,46,31,24],[31,48,31,46],[32,0,31,46],[32,17,31,52,"args"],[32,21,31,56],[32,22,31,57,"argIndex"],[32,30,31,65],[32,32,31,56],[32,33,31,46],[33,0,31,46],[33,9,31,24],[33,10,31,14],[33,11,31,6],[34,0,32,6,"error"],[34,8,32,6,"error"],[34,13,32,11],[34,14,32,12,"name"],[34,18,32,6],[34,21,32,19],[34,42,32,6],[35,0,33,5],[37,0,35,4,"error"],[37,6,35,4,"error"],[37,11,35,9],[37,12,35,10,"framesToPop"],[37,23,35,4],[37,26,35,24],[37,27,35,4],[38,0,37,4],[38,12,37,10,"error"],[38,17,37,4],[39,0,38,3],[40,0,39,1],[42,17,41,15,"invariant"],[42,26]],"functionMap":{"names":["<global>","validateFormat","invariant","format.replace$argument_1"],"mappings":"AAA;qBCU,4BD;mBCG;GDI;AEG;8CCU,sBD;CFQ"}},"type":"js/module"}]}