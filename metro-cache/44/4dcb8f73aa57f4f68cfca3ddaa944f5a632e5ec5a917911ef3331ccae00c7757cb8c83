{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireWildcard","data":{"isAsync":false}},{"name":"react-navigation","data":{"isAsync":false}},{"name":"./DrawerActions","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireWildcard\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _reactNavigation = _$$_REQUIRE(_dependencyMap[1], \"react-navigation\");\n\n  var DrawerActions = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[2], \"./DrawerActions\"));\n\n  function ownKeys(object, enumerableOnly) {\n    var keys = Object.keys(object);\n\n    if (Object.getOwnPropertySymbols) {\n      var symbols = Object.getOwnPropertySymbols(object);\n      if (enumerableOnly) symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n      keys.push.apply(keys, symbols);\n    }\n\n    return keys;\n  }\n\n  function _objectSpread(target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i] != null ? arguments[i] : {};\n\n      if (i % 2) {\n        ownKeys(Object(source), true).forEach(function (key) {\n          _defineProperty(target, key, source[key]);\n        });\n      } else if (Object.getOwnPropertyDescriptors) {\n        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n      } else {\n        ownKeys(Object(source)).forEach(function (key) {\n          Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n        });\n      }\n    }\n\n    return target;\n  }\n\n  function _defineProperty(obj, key, value) {\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n\n    return obj;\n  }\n\n  function withDefaultValue(obj, key, defaultValue) {\n    if (obj.hasOwnProperty(key) && typeof obj[key] !== 'undefined') {\n      return obj;\n    }\n\n    obj[key] = defaultValue;\n    return obj;\n  }\n\n  var getActiveRouteKey = function getActiveRouteKey(route) {\n    if (route.routes && typeof route.index === 'number' && route.routes[route.index]) {\n      return getActiveRouteKey(route.routes[route.index]);\n    }\n\n    return route.key;\n  };\n\n  var _default = function _default(routeConfigs) {\n    var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    config = _objectSpread({}, config);\n    config = withDefaultValue(config, 'resetOnBlur', config.unmountInactiveRoutes ? true : !!config.resetOnBlur);\n    config = withDefaultValue(config, 'backBehavior', 'initialRoute');\n    var switchRouter = (0, _reactNavigation.SwitchRouter)(routeConfigs, config);\n    return _objectSpread({}, switchRouter, {\n      getActionCreators: function getActionCreators(route, navStateKey) {\n        return _objectSpread({\n          openDrawer: function openDrawer() {\n            return DrawerActions.openDrawer({\n              key: navStateKey\n            });\n          },\n          closeDrawer: function closeDrawer() {\n            return DrawerActions.closeDrawer({\n              key: navStateKey\n            });\n          },\n          toggleDrawer: function toggleDrawer() {\n            return DrawerActions.toggleDrawer({\n              key: navStateKey\n            });\n          }\n        }, switchRouter.getActionCreators(route, navStateKey));\n      },\n      getStateForAction: function getStateForAction(action, state) {\n        if (!state) {\n          return _objectSpread({}, switchRouter.getStateForAction(action, undefined), {\n            isDrawerOpen: false\n          });\n        }\n\n        var isRouterTargeted = action.key == null || action.key === state.key;\n\n        if (isRouterTargeted) {\n          if (action.type === DrawerActions.CLOSE_DRAWER || action.type === _reactNavigation.NavigationActions.BACK && state.isDrawerOpen) {\n            return _objectSpread({}, state, {\n              isDrawerOpen: false\n            });\n          }\n\n          if (action.type === DrawerActions.OPEN_DRAWER) {\n            return _objectSpread({}, state, {\n              isDrawerOpen: true\n            });\n          }\n\n          if (action.type === DrawerActions.TOGGLE_DRAWER) {\n            return _objectSpread({}, state, {\n              isDrawerOpen: !state.isDrawerOpen\n            });\n          }\n        }\n\n        var switchedState = switchRouter.getStateForAction(action, state);\n\n        if (switchedState === null) {\n          return null;\n        }\n\n        if (switchedState !== state) {\n          if (getActiveRouteKey(switchedState) !== getActiveRouteKey(state) && state.isDrawerOpen) {\n            return _objectSpread({}, switchedState, {\n              isDrawerOpen: false\n            });\n          }\n\n          return switchedState;\n        }\n\n        return state;\n      }\n    });\n  };\n\n  exports.default = _default;\n});","lineCount":156,"map":[[9,0,7,0],[11,0,8,0],[13,0,1,0],[13,11,1,9,"ownKeys"],[13,18,1,0],[13,19,1,17,"object"],[13,25,1,0],[13,27,1,25,"enumerableOnly"],[13,41,1,0],[13,43,1,41],[14,0,1,43],[14,8,1,47,"keys"],[14,12,1,51],[14,15,1,54,"Object"],[14,21,1,60],[14,22,1,61,"keys"],[14,26,1,54],[14,27,1,66,"object"],[14,33,1,54],[14,34,1,43],[16,0,1,75],[16,8,1,79,"Object"],[16,14,1,85],[16,15,1,86,"getOwnPropertySymbols"],[16,36,1,75],[16,38,1,109],[17,0,1,111],[17,10,1,115,"symbols"],[17,17,1,122],[17,20,1,125,"Object"],[17,26,1,131],[17,27,1,132,"getOwnPropertySymbols"],[17,48,1,125],[17,49,1,154,"object"],[17,55,1,125],[17,56,1,111],[18,0,1,163],[18,10,1,167,"enumerableOnly"],[18,24,1,163],[18,26,1,183,"symbols"],[18,33,1,190],[18,36,1,193,"symbols"],[18,43,1,200],[18,44,1,201,"filter"],[18,50,1,193],[18,51,1,208],[18,61,1,218,"sym"],[18,64,1,208],[18,66,1,223],[19,0,1,225],[19,15,1,232,"Object"],[19,21,1,238],[19,22,1,239,"getOwnPropertyDescriptor"],[19,46,1,232],[19,47,1,264,"object"],[19,53,1,232],[19,55,1,272,"sym"],[19,58,1,232],[19,60,1,277,"enumerable"],[19,70,1,225],[20,0,1,290],[20,7,1,193],[20,8,1,183],[21,0,1,293,"keys"],[21,6,1,293,"keys"],[21,10,1,297],[21,11,1,298,"push"],[21,15,1,293],[21,16,1,303,"apply"],[21,21,1,293],[21,22,1,309,"keys"],[21,26,1,293],[21,28,1,315,"symbols"],[21,35,1,293],[22,0,1,326],[24,0,1,327],[24,11,1,334,"keys"],[24,15,1,327],[25,0,1,341],[27,0,3,0],[27,11,3,9,"_objectSpread"],[27,24,3,0],[27,25,3,23,"target"],[27,31,3,0],[27,33,3,31],[28,0,3,33],[28,9,3,38],[28,13,3,42,"i"],[28,14,3,43],[28,17,3,46],[28,18,3,33],[28,20,3,49,"i"],[28,21,3,50],[28,24,3,53,"arguments"],[28,33,3,62],[28,34,3,63,"length"],[28,40,3,33],[28,42,3,71,"i"],[28,43,3,72],[28,45,3,33],[28,47,3,76],[29,0,3,78],[29,10,3,82,"source"],[29,16,3,88],[29,19,3,91,"arguments"],[29,28,3,100],[29,29,3,101,"i"],[29,30,3,100],[29,31,3,91],[29,35,3,107],[29,39,3,91],[29,42,3,114,"arguments"],[29,51,3,123],[29,52,3,124,"i"],[29,53,3,123],[29,54,3,91],[29,57,3,129],[29,59,3,78],[31,0,3,133],[31,10,3,137,"i"],[31,11,3,138],[31,14,3,141],[31,15,3,133],[31,17,3,144],[32,0,3,146,"ownKeys"],[32,8,3,146,"ownKeys"],[32,15,3,153],[32,16,3,154,"Object"],[32,22,3,160],[32,23,3,161,"source"],[32,29,3,160],[32,30,3,153],[32,32,3,170],[32,36,3,153],[32,37,3,146],[32,38,3,176,"forEach"],[32,45,3,146],[32,46,3,184],[32,56,3,194,"key"],[32,59,3,184],[32,61,3,199],[33,0,3,201,"_defineProperty"],[33,10,3,201,"_defineProperty"],[33,25,3,216],[33,26,3,217,"target"],[33,32,3,216],[33,34,3,225,"key"],[33,37,3,216],[33,39,3,230,"source"],[33,45,3,236],[33,46,3,237,"key"],[33,49,3,236],[33,50,3,216],[33,51,3,201],[34,0,3,245],[34,9,3,146],[35,0,3,249],[35,7,3,133],[35,13,3,255],[35,17,3,259,"Object"],[35,23,3,265],[35,24,3,266,"getOwnPropertyDescriptors"],[35,49,3,255],[35,51,3,293],[36,0,3,295,"Object"],[36,8,3,295,"Object"],[36,14,3,301],[36,15,3,302,"defineProperties"],[36,31,3,295],[36,32,3,319,"target"],[36,38,3,295],[36,40,3,327,"Object"],[36,46,3,333],[36,47,3,334,"getOwnPropertyDescriptors"],[36,72,3,327],[36,73,3,360,"source"],[36,79,3,327],[36,80,3,295],[37,0,3,371],[37,7,3,255],[37,13,3,377],[38,0,3,379,"ownKeys"],[38,8,3,379,"ownKeys"],[38,15,3,386],[38,16,3,387,"Object"],[38,22,3,393],[38,23,3,394,"source"],[38,29,3,393],[38,30,3,386],[38,31,3,379],[38,32,3,403,"forEach"],[38,39,3,379],[38,40,3,411],[38,50,3,421,"key"],[38,53,3,411],[38,55,3,426],[39,0,3,428,"Object"],[39,10,3,428,"Object"],[39,16,3,434],[39,17,3,435,"defineProperty"],[39,31,3,428],[39,32,3,450,"target"],[39,38,3,428],[39,40,3,458,"key"],[39,43,3,428],[39,45,3,463,"Object"],[39,51,3,469],[39,52,3,470,"getOwnPropertyDescriptor"],[39,76,3,463],[39,77,3,495,"source"],[39,83,3,463],[39,85,3,503,"key"],[39,88,3,463],[39,89,3,428],[40,0,3,511],[40,9,3,379],[41,0,3,515],[42,0,3,517],[44,0,3,518],[44,11,3,525,"target"],[44,17,3,518],[45,0,3,534],[47,0,5,0],[47,11,5,9,"_defineProperty"],[47,26,5,0],[47,27,5,25,"obj"],[47,30,5,0],[47,32,5,30,"key"],[47,35,5,0],[47,37,5,35,"value"],[47,42,5,0],[47,44,5,42],[48,0,5,44],[48,8,5,48,"key"],[48,11,5,51],[48,15,5,55,"obj"],[48,18,5,44],[48,20,5,60],[49,0,5,62,"Object"],[49,6,5,62,"Object"],[49,12,5,68],[49,13,5,69,"defineProperty"],[49,27,5,62],[49,28,5,84,"obj"],[49,31,5,62],[49,33,5,89,"key"],[49,36,5,62],[49,38,5,94],[50,0,5,96,"value"],[50,8,5,96,"value"],[50,13,5,101],[50,15,5,103,"value"],[50,20,5,94],[51,0,5,110,"enumerable"],[51,8,5,110,"enumerable"],[51,18,5,120],[51,20,5,122],[51,24,5,94],[52,0,5,128,"configurable"],[52,8,5,128,"configurable"],[52,20,5,140],[52,22,5,142],[52,26,5,94],[53,0,5,148,"writable"],[53,8,5,148,"writable"],[53,16,5,156],[53,18,5,158],[54,0,5,94],[54,7,5,62],[55,0,5,168],[55,5,5,44],[55,11,5,174],[56,0,5,176,"obj"],[56,6,5,176,"obj"],[56,9,5,179],[56,10,5,180,"key"],[56,13,5,179],[56,14,5,176],[56,17,5,187,"value"],[56,22,5,176],[57,0,5,195],[59,0,5,196],[59,11,5,203,"obj"],[59,14,5,196],[60,0,5,209],[62,0,10,0],[62,11,10,9,"withDefaultValue"],[62,27,10,0],[62,28,10,26,"obj"],[62,31,10,0],[62,33,10,31,"key"],[62,36,10,0],[62,38,10,36,"defaultValue"],[62,50,10,0],[62,52,10,50],[63,0,12,2],[63,8,12,6,"obj"],[63,11,12,9],[63,12,12,10,"hasOwnProperty"],[63,26,12,6],[63,27,12,25,"key"],[63,30,12,6],[63,35,12,33],[63,42,12,40,"obj"],[63,45,12,43],[63,46,12,44,"key"],[63,49,12,43],[63,50,12,33],[63,55,12,53],[63,66,12,2],[63,68,12,66],[64,0,13,4],[64,13,13,11,"obj"],[64,16,13,4],[65,0,14,3],[67,0,17,2,"obj"],[67,4,17,2,"obj"],[67,7,17,5],[67,8,17,6,"key"],[67,11,17,5],[67,12,17,2],[67,15,17,13,"defaultValue"],[67,27,17,2],[68,0,18,2],[68,11,18,9,"obj"],[68,14,18,2],[69,0,19,1],[71,0,21,0],[71,6,21,6,"getActiveRouteKey"],[71,23,21,23],[71,26,21,26],[71,35,21,6,"getActiveRouteKey"],[71,52,21,26],[71,53,21,26,"route"],[71,58,21,31],[71,60,21,35],[72,0,22,2],[72,8,22,6,"route"],[72,13,22,11],[72,14,22,12,"routes"],[72,20,22,6],[72,24,22,22],[72,31,22,29,"route"],[72,36,22,34],[72,37,22,35,"index"],[72,42,22,22],[72,47,22,45],[72,55,22,6],[72,59,22,57,"route"],[72,64,22,62],[72,65,22,63,"routes"],[72,71,22,57],[72,72,22,70,"route"],[72,77,22,75],[72,78,22,76,"index"],[72,83,22,57],[72,84,22,2],[72,86,22,84],[73,0,23,4],[73,13,23,11,"getActiveRouteKey"],[73,30,23,28],[73,31,23,29,"route"],[73,36,23,34],[73,37,23,35,"routes"],[73,43,23,29],[73,44,23,42,"route"],[73,49,23,47],[73,50,23,48,"index"],[73,55,23,29],[73,56,23,28],[73,57,23,4],[74,0,24,3],[76,0,26,2],[76,11,26,9,"route"],[76,16,26,14],[76,17,26,15,"key"],[76,20,26,2],[77,0,27,1],[77,3,21,0],[79,17,29,16],[79,35,29,17,"routeConfigs"],[79,47,29,16],[79,49,29,47],[80,0,29,47],[80,8,29,31,"config"],[80,14,29,47],[80,85,29,40],[80,87,29,47],[81,0,30,2,"config"],[81,4,30,2,"config"],[81,10,30,8],[81,13,30,11,"_objectSpread"],[81,26,30,24],[81,27,30,25],[81,29,30,24],[81,31,30,29,"config"],[81,37,30,24],[81,38,30,2],[82,0,31,2,"config"],[82,4,31,2,"config"],[82,10,31,8],[82,13,31,11,"withDefaultValue"],[82,29,31,27],[82,30,31,28,"config"],[82,36,31,27],[82,38,31,36],[82,51,31,27],[82,53,31,51,"config"],[82,59,31,57],[82,60,31,58,"unmountInactiveRoutes"],[82,81,31,51],[82,84,31,82],[82,88,31,51],[82,91,31,89],[82,92,31,90],[82,93,31,91,"config"],[82,99,31,97],[82,100,31,98,"resetOnBlur"],[82,111,31,27],[82,112,31,2],[83,0,32,2,"config"],[83,4,32,2,"config"],[83,10,32,8],[83,13,32,11,"withDefaultValue"],[83,29,32,27],[83,30,32,28,"config"],[83,36,32,27],[83,38,32,36],[83,52,32,27],[83,54,32,52],[83,68,32,27],[83,69,32,2],[84,0,33,2],[84,8,33,8,"switchRouter"],[84,20,33,20],[84,23,33,23],[84,58,33,36,"routeConfigs"],[84,70,33,23],[84,72,33,50,"config"],[84,78,33,23],[84,79,33,2],[85,0,34,2],[85,11,34,9,"_objectSpread"],[85,24,34,22],[85,25,34,23],[85,27,34,22],[85,29,34,27,"switchRouter"],[85,41,34,22],[85,43,34,41],[86,0,35,4,"getActionCreators"],[86,6,35,4,"getActionCreators"],[86,23,34,41],[86,52,35,22,"route"],[86,57,34,41],[86,59,35,29,"navStateKey"],[86,70,34,41],[86,72,35,42],[87,0,36,6],[87,15,36,13,"_objectSpread"],[87,28,36,26],[87,29,36,27],[88,0,37,8,"openDrawer"],[88,10,37,8,"openDrawer"],[88,20,37,18],[88,22,37,20],[89,0,37,20],[89,19,37,26,"DrawerActions"],[89,32,37,39],[89,33,37,40,"openDrawer"],[89,43,37,26],[89,44,37,51],[90,0,38,10,"key"],[90,14,38,10,"key"],[90,17,38,13],[90,19,38,15,"navStateKey"],[91,0,37,51],[91,13,37,26],[91,14,37,20],[92,0,37,20],[92,11,36,27],[93,0,40,8,"closeDrawer"],[93,10,40,8,"closeDrawer"],[93,21,40,19],[93,23,40,21],[94,0,40,21],[94,19,40,27,"DrawerActions"],[94,32,40,40],[94,33,40,41,"closeDrawer"],[94,44,40,27],[94,45,40,53],[95,0,41,10,"key"],[95,14,41,10,"key"],[95,17,41,13],[95,19,41,15,"navStateKey"],[96,0,40,53],[96,13,40,27],[96,14,40,21],[97,0,40,21],[97,11,36,27],[98,0,43,8,"toggleDrawer"],[98,10,43,8,"toggleDrawer"],[98,22,43,20],[98,24,43,22],[99,0,43,22],[99,19,43,28,"DrawerActions"],[99,32,43,41],[99,33,43,42,"toggleDrawer"],[99,45,43,28],[99,46,43,55],[100,0,44,10,"key"],[100,14,44,10,"key"],[100,17,44,13],[100,19,44,15,"navStateKey"],[101,0,43,55],[101,13,43,28],[101,14,43,22],[102,0,43,22],[103,0,36,27],[103,9,36,26],[103,11,46,9,"switchRouter"],[103,23,46,21],[103,24,46,22,"getActionCreators"],[103,41,46,9],[103,42,46,40,"route"],[103,47,46,9],[103,49,46,47,"navStateKey"],[103,60,46,9],[103,61,36,26],[103,62,36,6],[104,0,47,5],[104,7,34,41],[105,0,49,4,"getStateForAction"],[105,6,49,4,"getStateForAction"],[105,23,34,41],[105,52,49,22,"action"],[105,58,34,41],[105,60,49,30,"state"],[105,65,34,41],[105,67,49,37],[106,0,51,6],[106,12,51,10],[106,13,51,11,"state"],[106,18,51,6],[106,20,51,18],[107,0,52,8],[107,17,52,15,"_objectSpread"],[107,30,52,28],[107,31,52,29],[107,33,52,28],[107,35,52,33,"switchRouter"],[107,47,52,45],[107,48,52,46,"getStateForAction"],[107,65,52,33],[107,66,52,64,"action"],[107,72,52,33],[107,74,52,72,"undefined"],[107,83,52,33],[107,84,52,28],[107,86,52,84],[108,0,53,10,"isDrawerOpen"],[108,12,53,10,"isDrawerOpen"],[108,24,53,22],[108,26,53,24],[109,0,52,84],[109,11,52,28],[109,12,52,8],[110,0,55,7],[112,0,57,6],[112,12,57,12,"isRouterTargeted"],[112,28,57,28],[112,31,57,31,"action"],[112,37,57,37],[112,38,57,38,"key"],[112,41,57,31],[112,45,57,45],[112,49,57,31],[112,53,57,53,"action"],[112,59,57,59],[112,60,57,60,"key"],[112,63,57,53],[112,68,57,68,"state"],[112,73,57,73],[112,74,57,74,"key"],[112,77,57,6],[114,0,59,6],[114,12,59,10,"isRouterTargeted"],[114,28,59,6],[114,30,59,28],[115,0,61,8],[115,14,61,12,"action"],[115,20,61,18],[115,21,61,19,"type"],[115,25,61,12],[115,30,61,28,"DrawerActions"],[115,43,61,41],[115,44,61,42,"CLOSE_DRAWER"],[115,56,61,12],[115,60,61,58,"action"],[115,66,61,64],[115,67,61,65,"type"],[115,71,61,58],[115,76,61,74,"NavigationActions"],[115,111,61,92,"BACK"],[115,115,61,58],[115,119,61,100,"state"],[115,124,61,105],[115,125,61,106,"isDrawerOpen"],[115,137,61,8],[115,139,61,120],[116,0,62,10],[116,19,62,17,"_objectSpread"],[116,32,62,30],[116,33,62,31],[116,35,62,30],[116,37,62,35,"state"],[116,42,62,30],[116,44,62,42],[117,0,63,12,"isDrawerOpen"],[117,14,63,12,"isDrawerOpen"],[117,26,63,24],[117,28,63,26],[118,0,62,42],[118,13,62,30],[118,14,62,10],[119,0,65,9],[121,0,67,8],[121,14,67,12,"action"],[121,20,67,18],[121,21,67,19,"type"],[121,25,67,12],[121,30,67,28,"DrawerActions"],[121,43,67,41],[121,44,67,42,"OPEN_DRAWER"],[121,55,67,8],[121,57,67,55],[122,0,68,10],[122,19,68,17,"_objectSpread"],[122,32,68,30],[122,33,68,31],[122,35,68,30],[122,37,68,35,"state"],[122,42,68,30],[122,44,68,42],[123,0,69,12,"isDrawerOpen"],[123,14,69,12,"isDrawerOpen"],[123,26,69,24],[123,28,69,26],[124,0,68,42],[124,13,68,30],[124,14,68,10],[125,0,71,9],[127,0,73,8],[127,14,73,12,"action"],[127,20,73,18],[127,21,73,19,"type"],[127,25,73,12],[127,30,73,28,"DrawerActions"],[127,43,73,41],[127,44,73,42,"TOGGLE_DRAWER"],[127,57,73,8],[127,59,73,57],[128,0,74,10],[128,19,74,17,"_objectSpread"],[128,32,74,30],[128,33,74,31],[128,35,74,30],[128,37,74,35,"state"],[128,42,74,30],[128,44,74,42],[129,0,75,12,"isDrawerOpen"],[129,14,75,12,"isDrawerOpen"],[129,26,75,24],[129,28,75,26],[129,29,75,27,"state"],[129,34,75,32],[129,35,75,33,"isDrawerOpen"],[130,0,74,42],[130,13,74,30],[130,14,74,10],[131,0,77,9],[132,0,78,7],[134,0,81,6],[134,12,81,12,"switchedState"],[134,25,81,25],[134,28,81,28,"switchRouter"],[134,40,81,40],[134,41,81,41,"getStateForAction"],[134,58,81,28],[134,59,81,59,"action"],[134,65,81,28],[134,67,81,67,"state"],[134,72,81,28],[134,73,81,6],[136,0,83,6],[136,12,83,10,"switchedState"],[136,25,83,23],[136,30,83,28],[136,34,83,6],[136,36,83,34],[137,0,85,8],[137,17,85,15],[137,21,85,8],[138,0,86,7],[140,0,89,6],[140,12,89,10,"switchedState"],[140,25,89,23],[140,30,89,28,"state"],[140,35,89,6],[140,37,89,35],[141,0,91,8],[141,14,91,12,"getActiveRouteKey"],[141,31,91,29],[141,32,91,30,"switchedState"],[141,45,91,29],[141,46,91,12],[141,51,91,49,"getActiveRouteKey"],[141,68,91,66],[141,69,91,67,"state"],[141,74,91,66],[141,75,91,12],[141,79,91,77,"state"],[141,84,91,82],[141,85,91,83,"isDrawerOpen"],[141,97,91,8],[141,99,91,97],[142,0,92,10],[142,19,92,17,"_objectSpread"],[142,32,92,30],[142,33,92,31],[142,35,92,30],[142,37,92,35,"switchedState"],[142,50,92,30],[142,52,92,50],[143,0,93,12,"isDrawerOpen"],[143,14,93,12,"isDrawerOpen"],[143,26,93,24],[143,28,93,26],[144,0,92,50],[144,13,92,30],[144,14,92,10],[145,0,95,9],[147,0,100,8],[147,17,100,15,"switchedState"],[147,30,100,8],[148,0,101,7],[150,0,103,6],[150,15,103,13,"state"],[150,20,103,6],[151,0,104,5],[152,0,34,41],[152,5,34,22],[152,6,34,2],[153,0,107,1],[153,3]],"functionMap":{"names":["ownKeys","symbols.filter$argument_0","<global>","_objectSpread","ownKeys.forEach$argument_0","_defineProperty","withDefaultValue","getActiveRouteKey","<anonymous>","_objectSpread$argument_2.getActionCreators","_objectSpread$argument_0.openDrawer","_objectSpread$argument_0.closeDrawer","_objectSpread$argument_0.toggleDrawer","_objectSpread$argument_2.getStateForAction"],"mappings":"AAA,gNC,kFD,mDE;ACE,wLC,6DD,sKC,oGD,uBD;AGE,iNH;AIK;CJS;0BKE;CLM;gBME;ICM;oBCE;UDE;qBEC;UFE;sBGC;UHE;KDE;IKE;KLuD;CNG"}},"type":"js/module"}]}