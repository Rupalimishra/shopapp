{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireWildcard","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/toConsumableArray","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/assertThisInitialized","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/inherits","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"isAsync":false}},{"name":"react","data":{"isAsync":false}},{"name":"react-native","data":{"isAsync":false}},{"name":"react-navigation","data":{"isAsync":false}},{"name":"react-native-screens","data":{"isAsync":false}},{"name":"../routers/DrawerActions","data":{"isAsync":false}},{"name":"./DrawerSidebar","data":{"isAsync":false}},{"name":"../utils/DrawerGestureContext","data":{"isAsync":false}},{"name":"./ResourceSavingScene","data":{"isAsync":false}},{"name":"./Drawer","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireWildcard\");\n\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/toConsumableArray\"));\n\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/createClass\"));\n\n  var _assertThisInitialized2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/assertThisInitialized\"));\n\n  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"@babel/runtime/helpers/inherits\"));\n\n  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n\n  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8], \"@babel/runtime/helpers/getPrototypeOf\"));\n\n  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[9], \"react\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[10], \"react-native\");\n\n  var _reactNavigation = _$$_REQUIRE(_dependencyMap[11], \"react-navigation\");\n\n  var _reactNativeScreens = _$$_REQUIRE(_dependencyMap[12], \"react-native-screens\");\n\n  var DrawerActions = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[13], \"../routers/DrawerActions\"));\n\n  var _DrawerSidebar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14], \"./DrawerSidebar\"));\n\n  var _DrawerGestureContext = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15], \"../utils/DrawerGestureContext\"));\n\n  var _ResourceSavingScene = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16], \"./ResourceSavingScene\"));\n\n  var _Drawer = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[17], \"./Drawer\"));\n\n  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\n  function _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n  function _extends() {\n    _extends = Object.assign || function (target) {\n      for (var i = 1; i < arguments.length; i++) {\n        var source = arguments[i];\n\n        for (var key in source) {\n          if (Object.prototype.hasOwnProperty.call(source, key)) {\n            target[key] = source[key];\n          }\n        }\n      }\n\n      return target;\n    };\n\n    return _extends.apply(this, arguments);\n  }\n\n  function _defineProperty(obj, key, value) {\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n\n    return obj;\n  }\n\n  var DrawerView = function (_React$PureComponent) {\n    (0, _inherits2.default)(DrawerView, _React$PureComponent);\n\n    var _super = _createSuper(DrawerView);\n\n    function DrawerView() {\n      var _this;\n\n      (0, _classCallCheck2.default)(this, DrawerView);\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this = _super.call.apply(_super, [this].concat(args));\n\n      _defineProperty((0, _assertThisInitialized2.default)(_this), \"state\", {\n        loaded: [_this.props.navigation.state.index],\n        drawerWidth: typeof _this.props.navigationConfig.drawerWidth === 'function' ? _this.props.navigationConfig.drawerWidth() : _this.props.navigationConfig.drawerWidth\n      });\n\n      _defineProperty((0, _assertThisInitialized2.default)(_this), \"context\", void 0);\n\n      _defineProperty((0, _assertThisInitialized2.default)(_this), \"drawerGestureRef\", React.createRef());\n\n      _defineProperty((0, _assertThisInitialized2.default)(_this), \"getLockMode\", function (_ref) {\n        var navigation = _ref.navigation,\n            descriptors = _ref.descriptors;\n        var activeKey = navigation.state.routes[navigation.state.index].key;\n        var drawerLockMode = descriptors[activeKey].options.drawerLockMode;\n        return drawerLockMode;\n      });\n\n      _defineProperty((0, _assertThisInitialized2.default)(_this), \"handleDrawerOpen\", function () {\n        var navigation = _this.props.navigation;\n        navigation.dispatch(DrawerActions.openDrawer({\n          key: navigation.state.key\n        }));\n      });\n\n      _defineProperty((0, _assertThisInitialized2.default)(_this), \"handleDrawerClose\", function () {\n        var navigation = _this.props.navigation;\n        navigation.dispatch(DrawerActions.closeDrawer({\n          key: navigation.state.key\n        }));\n      });\n\n      _defineProperty((0, _assertThisInitialized2.default)(_this), \"updateWidth\", function () {\n        var drawerWidth = typeof _this.props.navigationConfig.drawerWidth === 'function' ? _this.props.navigationConfig.drawerWidth() : _this.props.navigationConfig.drawerWidth;\n\n        if (_this.state.drawerWidth !== drawerWidth) {\n          _this.setState({\n            drawerWidth: drawerWidth\n          });\n        }\n      });\n\n      _defineProperty((0, _assertThisInitialized2.default)(_this), \"renderNavigationView\", function (_ref2) {\n        var progress = _ref2.progress;\n        return React.createElement(_DrawerSidebar.default, _extends({\n          screenProps: _this.props.screenProps,\n          drawerOpenProgress: progress,\n          navigation: _this.props.navigation,\n          descriptors: _this.props.descriptors,\n          contentComponent: _this.props.navigationConfig.contentComponent,\n          contentOptions: _this.props.navigationConfig.contentOptions,\n          drawerPosition: _this.props.navigationConfig.drawerPosition,\n          style: _this.props.navigationConfig.style\n        }, _this.props.navigationConfig));\n      });\n\n      _defineProperty((0, _assertThisInitialized2.default)(_this), \"renderContent\", function () {\n        var _this$props = _this.props,\n            lazy = _this$props.lazy,\n            navigation = _this$props.navigation;\n        var loaded = _this.state.loaded;\n        var routes = navigation.state.routes;\n\n        if (_this.props.navigationConfig.unmountInactiveRoutes) {\n          var activeKey = navigation.state.routes[navigation.state.index].key;\n          var descriptor = _this.props.descriptors[activeKey];\n          return React.createElement(_reactNavigation.SceneView, {\n            navigation: descriptor.navigation,\n            screenProps: _this.props.screenProps,\n            component: descriptor.getComponent()\n          });\n        } else {\n          return React.createElement(_reactNativeScreens.ScreenContainer, {\n            style: styles.content\n          }, routes.map(function (route, index) {\n            if (lazy && !loaded.includes(index)) {\n              return null;\n            }\n\n            var isFocused = navigation.state.index === index;\n            var descriptor = _this.props.descriptors[route.key];\n            return React.createElement(_ResourceSavingScene.default, {\n              key: route.key,\n              style: [_reactNative.StyleSheet.absoluteFill, {\n                opacity: isFocused ? 1 : 0\n              }],\n              isVisible: isFocused\n            }, React.createElement(_reactNavigation.SceneView, {\n              navigation: descriptor.navigation,\n              screenProps: _this.props.screenProps,\n              component: descriptor.getComponent()\n            }));\n          }));\n        }\n      });\n\n      _defineProperty((0, _assertThisInitialized2.default)(_this), \"setDrawerGestureRef\", function (ref) {\n        _this.drawerGestureRef.current = ref;\n      });\n\n      return _this;\n    }\n\n    (0, _createClass2.default)(DrawerView, [{\n      key: \"componentDidMount\",\n      value: function componentDidMount() {\n        if (this.getLockMode(this.props) === 'locked-open') {\n          this.handleDrawerOpen();\n        }\n\n        _reactNative.Dimensions.addEventListener('change', this.updateWidth);\n      }\n    }, {\n      key: \"componentDidUpdate\",\n      value: function componentDidUpdate(prevProps) {\n        var prevLockMode = this.getLockMode(prevProps);\n        var nextLockMode = this.getLockMode(this.props);\n\n        if (prevLockMode !== nextLockMode) {\n          if (nextLockMode === 'locked-open') {\n            this.handleDrawerOpen();\n          } else {\n            this.handleDrawerClose();\n          }\n        }\n      }\n    }, {\n      key: \"componentWillUnmount\",\n      value: function componentWillUnmount() {\n        _reactNative.Dimensions.removeEventListener('change', this.updateWidth);\n      }\n    }, {\n      key: \"getDrawerBackgroundColor\",\n      value: function getDrawerBackgroundColor() {\n        var drawerBackgroundColor = this.props.navigationConfig.drawerBackgroundColor;\n\n        if (drawerBackgroundColor) {\n          return typeof drawerBackgroundColor === 'string' ? drawerBackgroundColor : drawerBackgroundColor[this.context];\n        } else {\n          return _reactNavigation.ThemeColors[this.context].bodyContent;\n        }\n      }\n    }, {\n      key: \"getOverlayColor\",\n      value: function getOverlayColor() {\n        var overlayColor = this.props.navigationConfig.overlayColor;\n\n        if (overlayColor) {\n          return typeof overlayColor === 'string' ? overlayColor : overlayColor[this.context];\n        } else {\n          return 'rgba(0,0,0,0.5)';\n        }\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var _this$props2 = this.props,\n            navigation = _this$props2.navigation,\n            navigationConfig = _this$props2.navigationConfig;\n        var drawerType = navigationConfig.drawerType,\n            sceneContainerStyle = navigationConfig.sceneContainerStyle,\n            edgeWidth = navigationConfig.edgeWidth,\n            minSwipeDistance = navigationConfig.minSwipeDistance,\n            hideStatusBar = navigationConfig.hideStatusBar,\n            statusBarAnimation = navigationConfig.statusBarAnimation,\n            gestureHandlerProps = navigationConfig.gestureHandlerProps;\n        var drawerLockMode = this.getLockMode(this.props);\n        var drawerBackgroundColor = this.getDrawerBackgroundColor();\n        var overlayColor = this.getOverlayColor();\n        return React.createElement(_DrawerGestureContext.default.Provider, {\n          value: this.drawerGestureRef\n        }, React.createElement(_Drawer.default, {\n          open: navigation.state.isDrawerOpen,\n          gestureEnabled: drawerLockMode !== 'locked-open' && drawerLockMode !== 'locked-closed',\n          onOpen: this.handleDrawerOpen,\n          onClose: this.handleDrawerClose,\n          onGestureRef: this.setDrawerGestureRef,\n          gestureHandlerProps: gestureHandlerProps,\n          drawerType: drawerType,\n          drawerPosition: this.props.navigationConfig.drawerPosition,\n          sceneContainerStyle: sceneContainerStyle,\n          drawerStyle: {\n            backgroundColor: drawerBackgroundColor,\n            width: this.state.drawerWidth\n          },\n          overlayStyle: {\n            backgroundColor: overlayColor\n          },\n          swipeEdgeWidth: edgeWidth,\n          swipeDistanceThreshold: minSwipeDistance,\n          hideStatusBar: hideStatusBar,\n          statusBarAnimation: statusBarAnimation,\n          renderDrawerContent: this.renderNavigationView,\n          renderSceneContent: this.renderContent\n        }));\n      }\n    }], [{\n      key: \"getDerivedStateFromProps\",\n      value: function getDerivedStateFromProps(nextProps, prevState) {\n        var index = nextProps.navigation.state.index;\n        return {\n          loaded: prevState.loaded.includes(index) ? prevState.loaded : [].concat((0, _toConsumableArray2.default)(prevState.loaded), [index])\n        };\n      }\n    }]);\n    return DrawerView;\n  }(React.PureComponent);\n\n  exports.default = DrawerView;\n\n  _defineProperty(DrawerView, \"contextType\", _reactNavigation.ThemeContext);\n\n  _defineProperty(DrawerView, \"defaultProps\", {\n    lazy: true\n  });\n\n  var styles = _reactNative.StyleSheet.create({\n    content: {\n      flex: 1\n    }\n  });\n});","lineCount":316,"map":[[25,0,5,0],[27,0,6,0],[29,0,7,0],[31,0,8,0],[33,0,9,0],[35,0,10,0],[37,0,11,0],[39,0,12,0],[41,0,13,0],[47,0,1,0],[47,11,1,9,"_extends"],[47,19,1,0],[47,22,1,20],[48,0,1,22,"_extends"],[48,4,1,22,"_extends"],[48,12,1,30],[48,15,1,33,"Object"],[48,21,1,39],[48,22,1,40,"assign"],[48,28,1,33],[48,32,1,50],[48,42,1,60,"target"],[48,48,1,50],[48,50,1,68],[49,0,1,70],[49,11,1,75],[49,15,1,79,"i"],[49,16,1,80],[49,19,1,83],[49,20,1,70],[49,22,1,86,"i"],[49,23,1,87],[49,26,1,90,"arguments"],[49,35,1,99],[49,36,1,100,"length"],[49,42,1,70],[49,44,1,108,"i"],[49,45,1,109],[49,47,1,70],[49,49,1,113],[50,0,1,115],[50,12,1,119,"source"],[50,18,1,125],[50,21,1,128,"arguments"],[50,30,1,137],[50,31,1,138,"i"],[50,32,1,137],[50,33,1,115],[52,0,1,142],[52,13,1,147],[52,17,1,151,"key"],[52,20,1,142],[52,24,1,158,"source"],[52,30,1,142],[52,32,1,166],[53,0,1,168],[53,14,1,172,"Object"],[53,20,1,178],[53,21,1,179,"prototype"],[53,30,1,172],[53,31,1,189,"hasOwnProperty"],[53,45,1,172],[53,46,1,204,"call"],[53,50,1,172],[53,51,1,209,"source"],[53,57,1,172],[53,59,1,217,"key"],[53,62,1,172],[53,63,1,168],[53,65,1,223],[54,0,1,225,"target"],[54,12,1,225,"target"],[54,18,1,231],[54,19,1,232,"key"],[54,22,1,231],[54,23,1,225],[54,26,1,239,"source"],[54,32,1,245],[54,33,1,246,"key"],[54,36,1,245],[54,37,1,225],[55,0,1,253],[56,0,1,255],[57,0,1,257],[59,0,1,258],[59,13,1,265,"target"],[59,19,1,258],[60,0,1,274],[60,5,1,22],[62,0,1,276],[62,11,1,283,"_extends"],[62,19,1,291],[62,20,1,292,"apply"],[62,25,1,283],[62,26,1,298],[62,30,1,283],[62,32,1,304,"arguments"],[62,41,1,283],[62,42,1,276],[63,0,1,317],[65,0,3,0],[65,11,3,9,"_defineProperty"],[65,26,3,0],[65,27,3,25,"obj"],[65,30,3,0],[65,32,3,30,"key"],[65,35,3,0],[65,37,3,35,"value"],[65,42,3,0],[65,44,3,42],[66,0,3,44],[66,8,3,48,"key"],[66,11,3,51],[66,15,3,55,"obj"],[66,18,3,44],[66,20,3,60],[67,0,3,62,"Object"],[67,6,3,62,"Object"],[67,12,3,68],[67,13,3,69,"defineProperty"],[67,27,3,62],[67,28,3,84,"obj"],[67,31,3,62],[67,33,3,89,"key"],[67,36,3,62],[67,38,3,94],[68,0,3,96,"value"],[68,8,3,96,"value"],[68,13,3,101],[68,15,3,103,"value"],[68,20,3,94],[69,0,3,110,"enumerable"],[69,8,3,110,"enumerable"],[69,18,3,120],[69,20,3,122],[69,24,3,94],[70,0,3,128,"configurable"],[70,8,3,128,"configurable"],[70,20,3,140],[70,22,3,142],[70,26,3,94],[71,0,3,148,"writable"],[71,8,3,148,"writable"],[71,16,3,156],[71,18,3,158],[72,0,3,94],[72,7,3,62],[73,0,3,168],[73,5,3,44],[73,11,3,174],[74,0,3,176,"obj"],[74,6,3,176,"obj"],[74,9,3,179],[74,10,3,180,"key"],[74,13,3,179],[74,14,3,176],[74,17,3,187,"value"],[74,22,3,176],[75,0,3,195],[77,0,3,196],[77,11,3,203,"obj"],[77,14,3,196],[78,0,3,209],[80,6,18,21,"DrawerView"],[80,16],[85,0,19,2],[85,26,19,23],[86,0,19,23],[88,0,19,23],[90,0,19,23],[90,40,19,17,"args"],[90,44,19,23],[91,0,19,17,"args"],[91,8,19,17,"args"],[91,12,19,23],[92,0,19,23],[94,0,20,4],[94,54,20,13,"args"],[94,58,20,4],[96,0,22,4,"_defineProperty"],[96,6,22,4,"_defineProperty"],[96,21,22,19],[96,67,22,26],[96,74,22,19],[96,76,22,35],[97,0,23,6,"loaded"],[97,8,23,6,"loaded"],[97,14,23,12],[97,16,23,14],[97,17,23,15],[97,23,23,20,"props"],[97,28,23,15],[97,29,23,26,"navigation"],[97,39,23,15],[97,40,23,37,"state"],[97,45,23,15],[97,46,23,43,"index"],[97,51,23,14],[97,52,22,35],[98,0,24,6,"drawerWidth"],[98,8,24,6,"drawerWidth"],[98,19,24,17],[98,21,24,19],[98,28,24,26],[98,34,24,31,"props"],[98,39,24,26],[98,40,24,37,"navigationConfig"],[98,56,24,26],[98,57,24,54,"drawerWidth"],[98,68,24,19],[98,73,24,70],[98,83,24,19],[98,86,24,83],[98,92,24,88,"props"],[98,97,24,83],[98,98,24,94,"navigationConfig"],[98,114,24,83],[98,115,24,111,"drawerWidth"],[98,126,24,83],[98,128,24,19],[98,131,24,127],[98,137,24,132,"props"],[98,142,24,127],[98,143,24,138,"navigationConfig"],[98,159,24,127],[98,160,24,155,"drawerWidth"],[99,0,22,35],[99,7,22,19],[99,8,22,4],[101,0,27,4,"_defineProperty"],[101,6,27,4,"_defineProperty"],[101,21,27,19],[101,67,27,26],[101,76,27,19],[101,78,27,37],[101,83,27,42],[101,84,27,19],[101,85,27,4],[103,0,29,4,"_defineProperty"],[103,6,29,4,"_defineProperty"],[103,21,29,19],[103,67,29,26],[103,85,29,19],[103,87,29,46,"React"],[103,92,29,51],[103,93,29,52,"createRef"],[103,102,29,46],[103,104,29,19],[103,105,29,4],[105,0,31,4,"_defineProperty"],[105,6,31,4,"_defineProperty"],[105,21,31,19],[105,67,31,26],[105,80,31,19],[105,82,31,41],[105,98,34,10],[106,0,34,10],[106,12,32,6,"navigation"],[106,22,34,10],[106,30,32,6,"navigation"],[106,40,34,10],[107,0,34,10],[107,12,33,6,"descriptors"],[107,23,34,10],[107,31,33,6,"descriptors"],[107,42,34,10],[108,0,35,6],[108,12,35,12,"activeKey"],[108,21,35,21],[108,24,35,24,"navigation"],[108,34,35,34],[108,35,35,35,"state"],[108,40,35,24],[108,41,35,41,"routes"],[108,47,35,24],[108,48,35,48,"navigation"],[108,58,35,58],[108,59,35,59,"state"],[108,64,35,48],[108,65,35,65,"index"],[108,70,35,24],[108,72,35,72,"key"],[108,75,35,6],[109,0,34,10],[109,12,37,8,"drawerLockMode"],[109,26,34,10],[109,29,38,10,"descriptors"],[109,40,38,21],[109,41,38,22,"activeKey"],[109,50,38,21],[109,51,38,10],[109,52,38,33,"options"],[109,59,34,10],[109,60,37,8,"drawerLockMode"],[109,74,34,10],[110,0,39,6],[110,15,39,13,"drawerLockMode"],[110,29,39,6],[111,0,40,5],[111,7,31,19],[111,8,31,4],[113,0,42,4,"_defineProperty"],[113,6,42,4,"_defineProperty"],[113,21,42,19],[113,67,42,26],[113,85,42,19],[113,87,42,46],[113,99,42,52],[114,0,42,52],[114,12,44,8,"navigation"],[114,22,42,52],[114,25,45,10],[114,31,45,15,"props"],[114,36,42,52],[114,37,44,8,"navigation"],[114,47,42,52],[115,0,46,6,"navigation"],[115,8,46,6,"navigation"],[115,18,46,16],[115,19,46,17,"dispatch"],[115,27,46,6],[115,28,46,26,"DrawerActions"],[115,41,46,39],[115,42,46,40,"openDrawer"],[115,52,46,26],[115,53,46,51],[116,0,47,8,"key"],[116,10,47,8,"key"],[116,13,47,11],[116,15,47,13,"navigation"],[116,25,47,23],[116,26,47,24,"state"],[116,31,47,13],[116,32,47,30,"key"],[117,0,46,51],[117,9,46,26],[117,10,46,6],[118,0,49,5],[118,7,42,19],[118,8,42,4],[120,0,51,4,"_defineProperty"],[120,6,51,4,"_defineProperty"],[120,21,51,19],[120,67,51,26],[120,86,51,19],[120,88,51,47],[120,100,51,53],[121,0,51,53],[121,12,53,8,"navigation"],[121,22,51,53],[121,25,54,10],[121,31,54,15,"props"],[121,36,51,53],[121,37,53,8,"navigation"],[121,47,51,53],[122,0,55,6,"navigation"],[122,8,55,6,"navigation"],[122,18,55,16],[122,19,55,17,"dispatch"],[122,27,55,6],[122,28,55,26,"DrawerActions"],[122,41,55,39],[122,42,55,40,"closeDrawer"],[122,53,55,26],[122,54,55,52],[123,0,56,8,"key"],[123,10,56,8,"key"],[123,13,56,11],[123,15,56,13,"navigation"],[123,25,56,23],[123,26,56,24,"state"],[123,31,56,13],[123,32,56,30,"key"],[124,0,55,52],[124,9,55,26],[124,10,55,6],[125,0,58,5],[125,7,51,19],[125,8,51,4],[127,0,60,4,"_defineProperty"],[127,6,60,4,"_defineProperty"],[127,21,60,19],[127,67,60,26],[127,80,60,19],[127,82,60,41],[127,94,60,47],[128,0,61,6],[128,12,61,12,"drawerWidth"],[128,23,61,23],[128,26,61,26],[128,33,61,33],[128,39,61,38,"props"],[128,44,61,33],[128,45,61,44,"navigationConfig"],[128,61,61,33],[128,62,61,61,"drawerWidth"],[128,73,61,26],[128,78,61,77],[128,88,61,26],[128,91,61,90],[128,97,61,95,"props"],[128,102,61,90],[128,103,61,101,"navigationConfig"],[128,119,61,90],[128,120,61,118,"drawerWidth"],[128,131,61,90],[128,133,61,26],[128,136,61,134],[128,142,61,139,"props"],[128,147,61,134],[128,148,61,145,"navigationConfig"],[128,164,61,134],[128,165,61,162,"drawerWidth"],[128,176,61,6],[130,0,63,6],[130,12,63,10],[130,18,63,15,"state"],[130,23,63,10],[130,24,63,21,"drawerWidth"],[130,35,63,10],[130,40,63,37,"drawerWidth"],[130,51,63,6],[130,53,63,50],[131,0,64,8],[131,16,64,13,"setState"],[131,24,64,8],[131,25,64,22],[132,0,65,10,"drawerWidth"],[132,12,65,10,"drawerWidth"],[132,23,65,21],[132,25,65,10,"drawerWidth"],[133,0,64,22],[133,11,64,8],[134,0,67,7],[135,0,68,5],[135,7,60,19],[135,8,60,4],[137,0,70,4,"_defineProperty"],[137,6,70,4,"_defineProperty"],[137,21,70,19],[137,67,70,26],[137,89,70,19],[137,91,70,50],[137,108,72,10],[138,0,72,10],[138,12,71,6,"progress"],[138,20,72,10],[138,29,71,6,"progress"],[138,37,72,10],[139,0,73,6],[139,15,73,26,"React"],[139,20,73,31],[139,21,73,32,"createElement"],[139,34,73,26],[139,35,73,46,"DrawerSidebar"],[139,57,73,26],[139,59,73,61,"_extends"],[139,67,73,69],[139,68,73,70],[140,0,74,8,"screenProps"],[140,10,74,8,"screenProps"],[140,21,74,19],[140,23,74,21],[140,29,74,26,"props"],[140,34,74,21],[140,35,74,32,"screenProps"],[140,46,73,70],[141,0,75,8,"drawerOpenProgress"],[141,10,75,8,"drawerOpenProgress"],[141,28,75,26],[141,30,75,28,"progress"],[141,38,73,70],[142,0,76,8,"navigation"],[142,10,76,8,"navigation"],[142,20,76,18],[142,22,76,20],[142,28,76,25,"props"],[142,33,76,20],[142,34,76,31,"navigation"],[142,44,73,70],[143,0,77,8,"descriptors"],[143,10,77,8,"descriptors"],[143,21,77,19],[143,23,77,21],[143,29,77,26,"props"],[143,34,77,21],[143,35,77,32,"descriptors"],[143,46,73,70],[144,0,78,8,"contentComponent"],[144,10,78,8,"contentComponent"],[144,26,78,24],[144,28,78,26],[144,34,78,31,"props"],[144,39,78,26],[144,40,78,37,"navigationConfig"],[144,56,78,26],[144,57,78,54,"contentComponent"],[144,73,73,70],[145,0,79,8,"contentOptions"],[145,10,79,8,"contentOptions"],[145,24,79,22],[145,26,79,24],[145,32,79,29,"props"],[145,37,79,24],[145,38,79,35,"navigationConfig"],[145,54,79,24],[145,55,79,52,"contentOptions"],[145,69,73,70],[146,0,80,8,"drawerPosition"],[146,10,80,8,"drawerPosition"],[146,24,80,22],[146,26,80,24],[146,32,80,29,"props"],[146,37,80,24],[146,38,80,35,"navigationConfig"],[146,54,80,24],[146,55,80,52,"drawerPosition"],[146,69,73,70],[147,0,81,8,"style"],[147,10,81,8,"style"],[147,15,81,13],[147,17,81,15],[147,23,81,20,"props"],[147,28,81,15],[147,29,81,26,"navigationConfig"],[147,45,81,15],[147,46,81,43,"style"],[148,0,73,70],[148,9,73,69],[148,11,82,9],[148,17,82,14,"props"],[148,22,82,9],[148,23,82,20,"navigationConfig"],[148,39,73,69],[148,40,73,26],[148,41,73,6],[149,0,83,5],[149,7,70,19],[149,8,70,4],[151,0,85,4,"_defineProperty"],[151,6,85,4,"_defineProperty"],[151,21,85,19],[151,67,85,26],[151,82,85,19],[151,84,85,43],[151,96,85,49],[152,0,85,49],[152,26,89,10],[152,32,89,15,"props"],[152,37,85,49],[153,0,85,49],[153,12,87,8,"lazy"],[153,16,85,49],[153,31,87,8,"lazy"],[153,35,85,49],[154,0,85,49],[154,12,88,8,"navigation"],[154,22,85,49],[154,37,88,8,"navigation"],[154,47,85,49],[155,0,85,49],[155,12,91,8,"loaded"],[155,18,85,49],[155,21,92,10],[155,27,92,15,"state"],[155,32,85,49],[155,33,91,8,"loaded"],[155,39,85,49],[156,0,85,49],[156,12,94,8,"routes"],[156,18,85,49],[156,21,95,10,"navigation"],[156,31,95,20],[156,32,95,21,"state"],[156,37,85,49],[156,38,94,8,"routes"],[156,44,85,49],[158,0,97,6],[158,12,97,10],[158,18,97,15,"props"],[158,23,97,10],[158,24,97,21,"navigationConfig"],[158,40,97,10],[158,41,97,38,"unmountInactiveRoutes"],[158,62,97,6],[158,64,97,61],[159,0,98,8],[159,14,98,12,"activeKey"],[159,23,98,21],[159,26,98,24,"navigation"],[159,36,98,34],[159,37,98,35,"state"],[159,42,98,24],[159,43,98,41,"routes"],[159,49,98,24],[159,50,98,48,"navigation"],[159,60,98,58],[159,61,98,59,"state"],[159,66,98,48],[159,67,98,65,"index"],[159,72,98,24],[159,74,98,72,"key"],[159,77,98,8],[160,0,99,8],[160,14,99,12,"descriptor"],[160,24,99,22],[160,27,99,25],[160,33,99,30,"props"],[160,38,99,25],[160,39,99,36,"descriptors"],[160,50,99,25],[160,51,99,48,"activeKey"],[160,60,99,25],[160,61,99,8],[161,0,100,8],[161,17,100,28,"React"],[161,22,100,33],[161,23,100,34,"createElement"],[161,36,100,28],[161,37,100,48,"SceneView"],[161,63,100,28],[161,65,100,59],[162,0,101,10,"navigation"],[162,12,101,10,"navigation"],[162,22,101,20],[162,24,101,22,"descriptor"],[162,34,101,32],[162,35,101,33,"navigation"],[162,45,100,59],[163,0,102,10,"screenProps"],[163,12,102,10,"screenProps"],[163,23,102,21],[163,25,102,23],[163,31,102,28,"props"],[163,36,102,23],[163,37,102,34,"screenProps"],[163,48,100,59],[164,0,103,10,"component"],[164,12,103,10,"component"],[164,21,103,19],[164,23,103,21,"descriptor"],[164,33,103,31],[164,34,103,32,"getComponent"],[164,46,103,21],[165,0,100,59],[165,11,100,28],[165,12,100,8],[166,0,105,7],[166,9,97,6],[166,15,105,13],[167,0,106,8],[167,17,106,28,"React"],[167,22,106,33],[167,23,106,34,"createElement"],[167,36,106,28],[167,37,106,48,"ScreenContainer"],[167,72,106,28],[167,74,106,65],[168,0,107,10,"style"],[168,12,107,10,"style"],[168,17,107,15],[168,19,107,17,"styles"],[168,25,107,23],[168,26,107,24,"content"],[169,0,106,65],[169,11,106,28],[169,13,108,11,"routes"],[169,19,108,17],[169,20,108,18,"map"],[169,23,108,11],[169,24,108,22],[169,34,108,23,"route"],[169,39,108,22],[169,41,108,30,"index"],[169,46,108,22],[169,48,108,40],[170,0,109,10],[170,16,109,14,"lazy"],[170,20,109,18],[170,24,109,22],[170,25,109,23,"loaded"],[170,31,109,29],[170,32,109,30,"includes"],[170,40,109,23],[170,41,109,39,"index"],[170,46,109,23],[170,47,109,10],[170,49,109,47],[171,0,111,12],[171,21,111,19],[171,25,111,12],[172,0,112,11],[174,0,114,10],[174,16,114,14,"isFocused"],[174,25,114,23],[174,28,114,26,"navigation"],[174,38,114,36],[174,39,114,37,"state"],[174,44,114,26],[174,45,114,43,"index"],[174,50,114,26],[174,55,114,53,"index"],[174,60,114,10],[175,0,115,10],[175,16,115,14,"descriptor"],[175,26,115,24],[175,29,115,27],[175,35,115,32,"props"],[175,40,115,27],[175,41,115,38,"descriptors"],[175,52,115,27],[175,53,115,50,"route"],[175,58,115,55],[175,59,115,56,"key"],[175,62,115,27],[175,63,115,10],[176,0,116,10],[176,19,116,30,"React"],[176,24,116,35],[176,25,116,36,"createElement"],[176,38,116,30],[176,39,116,50,"ResourceSavingScene"],[176,67,116,30],[176,69,116,71],[177,0,117,12,"key"],[177,14,117,12,"key"],[177,17,117,15],[177,19,117,17,"route"],[177,24,117,22],[177,25,117,23,"key"],[177,28,116,71],[178,0,118,12,"style"],[178,14,118,12,"style"],[178,19,118,17],[178,21,118,19],[178,22,118,20,"StyleSheet"],[178,46,118,31,"absoluteFill"],[178,58,118,19],[178,60,118,45],[179,0,119,14,"opacity"],[179,16,119,14,"opacity"],[179,23,119,21],[179,25,119,23,"isFocused"],[179,34,119,32],[179,37,119,35],[179,38,119,32],[179,41,119,39],[180,0,118,45],[180,15,118,19],[180,16,116,71],[181,0,121,12,"isVisible"],[181,14,121,12,"isVisible"],[181,23,121,21],[181,25,121,23,"isFocused"],[182,0,116,71],[182,13,116,30],[182,15,122,26,"React"],[182,20,122,31],[182,21,122,32,"createElement"],[182,34,122,26],[182,35,122,46,"SceneView"],[182,61,122,26],[182,63,122,57],[183,0,123,12,"navigation"],[183,14,123,12,"navigation"],[183,24,123,22],[183,26,123,24,"descriptor"],[183,36,123,34],[183,37,123,35,"navigation"],[183,47,122,57],[184,0,124,12,"screenProps"],[184,14,124,12,"screenProps"],[184,25,124,23],[184,27,124,25],[184,33,124,30,"props"],[184,38,124,25],[184,39,124,36,"screenProps"],[184,50,122,57],[185,0,125,12,"component"],[185,14,125,12,"component"],[185,23,125,21],[185,25,125,23,"descriptor"],[185,35,125,33],[185,36,125,34,"getComponent"],[185,48,125,23],[186,0,122,57],[186,13,122,26],[186,14,116,30],[186,15,116,10],[187,0,127,9],[187,11,108,11],[187,12,106,28],[187,13,106,8],[188,0,128,7],[189,0,129,5],[189,7,85,19],[189,8,85,4],[191,0,131,4,"_defineProperty"],[191,6,131,4,"_defineProperty"],[191,21,131,19],[191,67,131,26],[191,88,131,19],[191,90,131,49],[191,100,131,49,"ref"],[191,103,131,52],[191,105,131,56],[192,0,133,6],[192,14,133,11,"drawerGestureRef"],[192,30,133,6],[192,31,133,28,"current"],[192,38,133,6],[192,41,133,38,"ref"],[192,44,133,6],[193,0,134,5],[193,7,131,19],[193,8,131,4],[195,0,19,23],[196,0,135,3],[200,42,147,22],[201,0,149,4],[201,12,149,8],[201,17,149,13,"getLockMode"],[201,28,149,8],[201,29,149,25],[201,34,149,30,"props"],[201,39,149,8],[201,45,149,41],[201,58,149,4],[201,60,149,56],[202,0,150,6],[202,15,150,11,"handleDrawerOpen"],[202,31,150,6],[203,0,151,5],[205,0,153,4,"Dimensions"],[205,32,153,15,"addEventListener"],[205,48,153,4],[205,49,153,32],[205,57,153,4],[205,59,153,42],[205,64,153,47,"updateWidth"],[205,75,153,4],[206,0,154,3],[209,41,156,21,"prevProps"],[209,50],[209,52,156,32],[210,0,157,4],[210,12,157,10,"prevLockMode"],[210,24,157,22],[210,27,157,25],[210,32,157,30,"getLockMode"],[210,43,157,25],[210,44,157,42,"prevProps"],[210,53,157,25],[210,54,157,4],[211,0,158,4],[211,12,158,10,"nextLockMode"],[211,24,158,22],[211,27,158,25],[211,32,158,30,"getLockMode"],[211,43,158,25],[211,44,158,42],[211,49,158,47,"props"],[211,54,158,25],[211,55,158,4],[213,0,160,4],[213,12,160,8,"prevLockMode"],[213,24,160,20],[213,29,160,25,"nextLockMode"],[213,41,160,4],[213,43,160,39],[214,0,161,6],[214,14,161,10,"nextLockMode"],[214,26,161,22],[214,31,161,27],[214,44,161,6],[214,46,161,42],[215,0,162,8],[215,17,162,13,"handleDrawerOpen"],[215,33,162,8],[216,0,163,7],[216,11,161,6],[216,17,163,13],[217,0,164,8],[217,17,164,13,"handleDrawerClose"],[217,34,164,8],[218,0,165,7],[219,0,166,5],[220,0,167,3],[223,45,169,25],[224,0,170,4,"Dimensions"],[224,32,170,15,"removeEventListener"],[224,51,170,4],[224,52,170,35],[224,60,170,4],[224,62,170,45],[224,67,170,50,"updateWidth"],[224,78,170,4],[225,0,171,3],[228,49,173,29],[229,0,173,29],[229,12,175,6,"drawerBackgroundColor"],[229,33,173,29],[229,36,176,8],[229,41,176,13,"props"],[229,46,176,8],[229,47,176,19,"navigationConfig"],[229,63,173,29],[229,64,175,6,"drawerBackgroundColor"],[229,85,173,29],[231,0,178,4],[231,12,178,8,"drawerBackgroundColor"],[231,33,178,4],[231,35,178,31],[232,0,179,6],[232,17,179,13],[232,24,179,20,"drawerBackgroundColor"],[232,45,179,13],[232,50,179,46],[232,58,179,13],[232,61,179,57,"drawerBackgroundColor"],[232,82,179,13],[232,85,179,81,"drawerBackgroundColor"],[232,106,179,102],[232,107,179,103],[232,112,179,108,"context"],[232,119,179,102],[232,120,179,6],[233,0,180,5],[233,9,178,4],[233,15,180,11],[234,0,181,6],[234,17,181,13,"ThemeColors"],[234,46,181,25],[234,51,181,30,"context"],[234,58,181,13],[234,60,181,39,"bodyContent"],[234,71,181,6],[235,0,182,5],[236,0,183,3],[239,40,185,20],[240,0,185,20],[240,12,187,6,"overlayColor"],[240,24,185,20],[240,27,188,8],[240,32,188,13,"props"],[240,37,188,8],[240,38,188,19,"navigationConfig"],[240,54,185,20],[240,55,187,6,"overlayColor"],[240,67,185,20],[242,0,190,4],[242,12,190,8,"overlayColor"],[242,24,190,4],[242,26,190,22],[243,0,191,6],[243,17,191,13],[243,24,191,20,"overlayColor"],[243,36,191,13],[243,41,191,37],[243,49,191,13],[243,52,191,48,"overlayColor"],[243,64,191,13],[243,67,191,63,"overlayColor"],[243,79,191,75],[243,80,191,76],[243,85,191,81,"context"],[243,92,191,75],[243,93,191,6],[244,0,192,5],[244,9,190,4],[244,15,192,11],[245,0,193,6],[245,17,193,13],[245,34,193,6],[246,0,194,5],[247,0,195,3],[250,31,197,11],[251,0,197,11],[251,27,201,8],[251,32,201,13,"props"],[251,37,197,11],[252,0,197,11],[252,12,199,6,"navigation"],[252,22,197,11],[252,38,199,6,"navigation"],[252,48,197,11],[253,0,197,11],[253,12,200,6,"navigationConfig"],[253,28,197,11],[253,44,200,6,"navigationConfig"],[253,60,197,11],[254,0,197,11],[254,12,203,6,"drawerType"],[254,22,197,11],[254,25,210,8,"navigationConfig"],[254,41,197,11],[254,42,203,6,"drawerType"],[254,52,197,11],[255,0,197,11],[255,12,204,6,"sceneContainerStyle"],[255,31,197,11],[255,34,210,8,"navigationConfig"],[255,50,197,11],[255,51,204,6,"sceneContainerStyle"],[255,70,197,11],[256,0,197,11],[256,12,205,6,"edgeWidth"],[256,21,197,11],[256,24,210,8,"navigationConfig"],[256,40,197,11],[256,41,205,6,"edgeWidth"],[256,50,197,11],[257,0,197,11],[257,12,206,6,"minSwipeDistance"],[257,28,197,11],[257,31,210,8,"navigationConfig"],[257,47,197,11],[257,48,206,6,"minSwipeDistance"],[257,64,197,11],[258,0,197,11],[258,12,207,6,"hideStatusBar"],[258,25,197,11],[258,28,210,8,"navigationConfig"],[258,44,197,11],[258,45,207,6,"hideStatusBar"],[258,58,197,11],[259,0,197,11],[259,12,208,6,"statusBarAnimation"],[259,30,197,11],[259,33,210,8,"navigationConfig"],[259,49,197,11],[259,50,208,6,"statusBarAnimation"],[259,68,197,11],[260,0,197,11],[260,12,209,6,"gestureHandlerProps"],[260,31,197,11],[260,34,210,8,"navigationConfig"],[260,50,197,11],[260,51,209,6,"gestureHandlerProps"],[260,70,197,11],[261,0,211,4],[261,12,211,10,"drawerLockMode"],[261,26,211,24],[261,29,211,27],[261,34,211,32,"getLockMode"],[261,45,211,27],[261,46,211,44],[261,51,211,49,"props"],[261,56,211,27],[261,57,211,4],[262,0,212,4],[262,12,212,10,"drawerBackgroundColor"],[262,33,212,31],[262,36,212,34],[262,41,212,39,"getDrawerBackgroundColor"],[262,65,212,34],[262,67,212,4],[263,0,213,4],[263,12,213,10,"overlayColor"],[263,24,213,22],[263,27,213,25],[263,32,213,30,"getOverlayColor"],[263,47,213,25],[263,49,213,4],[264,0,214,4],[264,15,214,24,"React"],[264,20,214,29],[264,21,214,30,"createElement"],[264,34,214,24],[264,35,214,44,"DrawerGestureContext"],[264,65,214,65,"Provider"],[264,73,214,24],[264,75,214,75],[265,0,215,6,"value"],[265,10,215,6,"value"],[265,15,215,11],[265,17,215,13],[265,22,215,18,"drawerGestureRef"],[266,0,214,75],[266,9,214,24],[266,11,216,20,"React"],[266,16,216,25],[266,17,216,26,"createElement"],[266,30,216,20],[266,31,216,40,"Drawer"],[266,46,216,20],[266,48,216,48],[267,0,217,6,"open"],[267,10,217,6,"open"],[267,14,217,10],[267,16,217,12,"navigation"],[267,26,217,22],[267,27,217,23,"state"],[267,32,217,12],[267,33,217,29,"isDrawerOpen"],[267,45,216,48],[268,0,218,6,"gestureEnabled"],[268,10,218,6,"gestureEnabled"],[268,24,218,20],[268,26,218,22,"drawerLockMode"],[268,40,218,36],[268,45,218,41],[268,58,218,22],[268,62,218,58,"drawerLockMode"],[268,76,218,72],[268,81,218,77],[268,96,216,48],[269,0,219,6,"onOpen"],[269,10,219,6,"onOpen"],[269,16,219,12],[269,18,219,14],[269,23,219,19,"handleDrawerOpen"],[269,39,216,48],[270,0,220,6,"onClose"],[270,10,220,6,"onClose"],[270,17,220,13],[270,19,220,15],[270,24,220,20,"handleDrawerClose"],[270,41,216,48],[271,0,221,6,"onGestureRef"],[271,10,221,6,"onGestureRef"],[271,22,221,18],[271,24,221,20],[271,29,221,25,"setDrawerGestureRef"],[271,48,216,48],[272,0,222,6,"gestureHandlerProps"],[272,10,222,6,"gestureHandlerProps"],[272,29,222,25],[272,31,222,27,"gestureHandlerProps"],[272,50,216,48],[273,0,223,6,"drawerType"],[273,10,223,6,"drawerType"],[273,20,223,16],[273,22,223,18,"drawerType"],[273,32,216,48],[274,0,224,6,"drawerPosition"],[274,10,224,6,"drawerPosition"],[274,24,224,20],[274,26,224,22],[274,31,224,27,"props"],[274,36,224,22],[274,37,224,33,"navigationConfig"],[274,53,224,22],[274,54,224,50,"drawerPosition"],[274,68,216,48],[275,0,225,6,"sceneContainerStyle"],[275,10,225,6,"sceneContainerStyle"],[275,29,225,25],[275,31,225,27,"sceneContainerStyle"],[275,50,216,48],[276,0,226,6,"drawerStyle"],[276,10,226,6,"drawerStyle"],[276,21,226,17],[276,23,226,19],[277,0,227,8,"backgroundColor"],[277,12,227,8,"backgroundColor"],[277,27,227,23],[277,29,227,25,"drawerBackgroundColor"],[277,50,226,19],[278,0,228,8,"width"],[278,12,228,8,"width"],[278,17,228,13],[278,19,228,15],[278,24,228,20,"state"],[278,29,228,15],[278,30,228,26,"drawerWidth"],[279,0,226,19],[279,11,216,48],[280,0,230,6,"overlayStyle"],[280,10,230,6,"overlayStyle"],[280,22,230,18],[280,24,230,20],[281,0,231,8,"backgroundColor"],[281,12,231,8,"backgroundColor"],[281,27,231,23],[281,29,231,25,"overlayColor"],[282,0,230,20],[282,11,216,48],[283,0,233,6,"swipeEdgeWidth"],[283,10,233,6,"swipeEdgeWidth"],[283,24,233,20],[283,26,233,22,"edgeWidth"],[283,35,216,48],[284,0,234,6,"swipeDistanceThreshold"],[284,10,234,6,"swipeDistanceThreshold"],[284,32,234,28],[284,34,234,30,"minSwipeDistance"],[284,50,216,48],[285,0,235,6,"hideStatusBar"],[285,10,235,6,"hideStatusBar"],[285,23,235,19],[285,25,235,21,"hideStatusBar"],[285,38,216,48],[286,0,236,6,"statusBarAnimation"],[286,10,236,6,"statusBarAnimation"],[286,28,236,24],[286,30,236,26,"statusBarAnimation"],[286,48,216,48],[287,0,237,6,"renderDrawerContent"],[287,10,237,6,"renderDrawerContent"],[287,29,237,25],[287,31,237,27],[287,36,237,32,"renderNavigationView"],[287,56,216,48],[288,0,238,6,"renderSceneContent"],[288,10,238,6,"renderSceneContent"],[288,28,238,24],[288,30,238,26],[288,35,238,31,"renderContent"],[289,0,216,48],[289,9,216,20],[289,10,214,24],[289,11,214,4],[290,0,240,3],[293,47,137,34,"nextProps"],[293,56],[293,58,137,45,"prevState"],[293,67],[293,69,137,56],[294,0,137,56],[294,12,139,6,"index"],[294,17,137,56],[294,20,140,8,"nextProps"],[294,29,140,17],[294,30,140,18,"navigation"],[294,40,140,8],[294,41,140,29,"state"],[294,46,137,56],[294,47,139,6,"index"],[294,52,137,56],[295,0,141,4],[295,15,141,11],[296,0,143,6,"loaded"],[296,10,143,6,"loaded"],[296,16,143,12],[296,18,143,14,"prevState"],[296,27,143,23],[296,28,143,24,"loaded"],[296,34,143,14],[296,35,143,31,"includes"],[296,43,143,14],[296,44,143,40,"index"],[296,49,143,14],[296,53,143,49,"prevState"],[296,62,143,58],[296,63,143,59,"loaded"],[296,69,143,14],[296,115,143,72,"prevState"],[296,124,143,81],[296,125,143,82,"loaded"],[296,131,143,14],[296,135,143,90,"index"],[296,140,143,14],[297,0,141,11],[297,9,141,4],[298,0,145,3],[301,4,18,40,"React"],[301,9,18,45],[301,10,18,46,"PureComponent"],[301,23],[305,0,244,0,"_defineProperty"],[305,2,244,0,"_defineProperty"],[305,17,244,15],[305,18,244,16,"DrawerView"],[305,28,244,15],[305,30,244,28],[305,43,244,15],[305,45,244,43,"ThemeContext"],[305,74,244,15],[305,75,244,0],[307,0,246,0,"_defineProperty"],[307,2,246,0,"_defineProperty"],[307,17,246,15],[307,18,246,16,"DrawerView"],[307,28,246,15],[307,30,246,28],[307,44,246,15],[307,46,246,44],[308,0,247,2,"lazy"],[308,4,247,2,"lazy"],[308,8,247,6],[308,10,247,8],[309,0,246,44],[309,3,246,15],[309,4,246,0],[311,0,250,0],[311,6,250,6,"styles"],[311,12,250,12],[311,15,250,15,"StyleSheet"],[311,39,250,26,"create"],[311,45,250,15],[311,46,250,33],[312,0,251,2,"content"],[312,4,251,2,"content"],[312,11,251,9],[312,13,251,11],[313,0,252,4,"flex"],[313,6,252,4,"flex"],[313,10,252,8],[313,12,252,10],[314,0,251,11],[315,0,250,33],[315,3,250,15],[315,4,250,0]],"functionMap":{"names":["_extends","<anonymous>","<global>","_defineProperty","DrawerView","constructor","_defineProperty$argument_2","routes.map$argument_0","getDerivedStateFromProps","componentDidMount","componentDidUpdate","componentWillUnmount","getDrawerBackgroundColor","getOverlayColor","render"],"mappings":"AAA,kDC,gOD,2CE;ACE,iND;eEe;ECC;yCCY;KDS;8CCE;KDO;+CCE;KDO;yCCE;KDQ;kDCE;KDa;2CCE;sBCuB;SDmB;KDE;iDCE;KDG;GDC;EIE;GJQ;EKE;GLO;EME;GNW;EOE;GPE;EQE;GRU;ESE;GTU;EUE;GV2C;CFE"}},"type":"js/module"}]}