{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireWildcard","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/inherits","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"isAsync":false}},{"name":"fbjs/lib/invariant","data":{"isAsync":false}},{"name":"./AnimatedNode","data":{"isAsync":false}},{"name":"./AnimatedClock","data":{"isAsync":false}},{"name":"../val","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireWildcard\");\n\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.createAnimatedParam = createAnimatedParam;\n  exports.AnimatedParam = void 0;\n\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/createClass\"));\n\n  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/inherits\"));\n\n  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n\n  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"@babel/runtime/helpers/getPrototypeOf\"));\n\n  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"fbjs/lib/invariant\"));\n\n  var _AnimatedNode2 = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8], \"./AnimatedNode\"));\n\n  var _AnimatedClock = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9], \"./AnimatedClock\"));\n\n  var _val = _$$_REQUIRE(_dependencyMap[10], \"../val\");\n\n  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\n  function _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n  var AnimatedParam = function (_AnimatedNode) {\n    (0, _inherits2.default)(AnimatedParam, _AnimatedNode);\n\n    var _super = _createSuper(AnimatedParam);\n\n    function AnimatedParam() {\n      var _this;\n\n      (0, _classCallCheck2.default)(this, AnimatedParam);\n      _this = _super.call(this, {\n        type: 'param'\n      }, []);\n      _this.argsStack = [];\n\n      _this.__attach();\n\n      return _this;\n    }\n\n    (0, _createClass2.default)(AnimatedParam, [{\n      key: \"beginContext\",\n      value: function beginContext(ref, prevCallID) {\n        this._prevCallID = prevCallID;\n        this.argsStack.push(ref);\n      }\n    }, {\n      key: \"endContext\",\n      value: function endContext() {\n        this.argsStack.pop();\n      }\n    }, {\n      key: \"_getTopNode\",\n      value: function _getTopNode() {\n        if (this.argsStack.length === 0) throw new Error(\"param: Invocation failed because argsStack is empty\");\n        var top = this.argsStack[this.argsStack.length - 1];\n        return top;\n      }\n    }, {\n      key: \"setValue\",\n      value: function setValue(value) {\n        var top = this._getTopNode();\n\n        if (top.setValue) {\n          var callID = (0, _AnimatedNode2.getCallID)();\n          (0, _AnimatedNode2.setCallID)(this._prevCallID);\n          top.setValue(value);\n          (0, _AnimatedNode2.setCallID)(callID);\n        } else {\n          throw new Error(\"param: setValue(\" + value + \") failed because the top element has no known method for updating it's current value.\");\n        }\n      }\n    }, {\n      key: \"__onEvaluate\",\n      value: function __onEvaluate() {\n        var callID = (0, _AnimatedNode2.getCallID)();\n        (0, _AnimatedNode2.setCallID)(this._prevCallID);\n\n        var top = this._getTopNode();\n\n        var value = (0, _val.val)(top);\n        (0, _AnimatedNode2.setCallID)(callID);\n        return value;\n      }\n    }, {\n      key: \"start\",\n      value: function start() {\n        var node = this._getTopNode();\n\n        (0, _invariant.default)(node instanceof _AnimatedClock.default || node instanceof AnimatedParam, \"param: top node should be of type AnimatedClock but got \" + node);\n        node.start();\n      }\n    }, {\n      key: \"stop\",\n      value: function stop() {\n        var node = this._getTopNode();\n\n        (0, _invariant.default)(node instanceof _AnimatedClock.default || node instanceof AnimatedParam, \"param: top node should be of type AnimatedClock but got \" + node);\n        node.stop();\n      }\n    }, {\n      key: \"isRunning\",\n      value: function isRunning() {\n        var node = this._getTopNode();\n\n        if (node instanceof AnimatedParam) {\n          return node.isRunning();\n        }\n\n        (0, _invariant.default)(node instanceof _AnimatedClock.default, \"param: top node should be of type AnimatedClock but got \" + node);\n        return node.isStarted();\n      }\n    }]);\n    return AnimatedParam;\n  }(_AnimatedNode2.default);\n\n  exports.AnimatedParam = AnimatedParam;\n\n  function createAnimatedParam() {\n    return new AnimatedParam();\n  }\n});","lineCount":134,"map":[[22,0,1,0],[24,0,2,0],[26,0,3,0],[28,0,4,0],[34,6,6,13,"AnimatedParam"],[34,19],[39,0,10,2],[39,29,10,16],[40,0,10,16],[42,0,10,16],[43,0,11,4],[43,32,11,10],[44,0,11,12,"type"],[44,8,11,12,"type"],[44,12,11,16],[44,14,11,18],[45,0,11,10],[45,7,11,4],[45,9,11,29],[45,11,11,4],[46,0,10,16],[46,12,7,2,"argsStack"],[46,21,10,16],[46,24,7,14],[46,26,10,16],[48,0,12,4],[48,12,12,9,"__attach"],[48,20,12,4],[50,0,10,16],[51,0,13,3],[55,35,15,15,"ref"],[55,38],[55,40,15,20,"prevCallID"],[55,50],[55,52,15,32],[56,0,16,4],[56,13,16,9,"_prevCallID"],[56,24,16,4],[56,27,16,23,"prevCallID"],[56,37,16,4],[57,0,17,4],[57,13,17,9,"argsStack"],[57,22,17,4],[57,23,17,19,"push"],[57,27,17,4],[57,28,17,24,"ref"],[57,31,17,4],[58,0,18,3],[61,35,20,15],[62,0,21,4],[62,13,21,9,"argsStack"],[62,22,21,4],[62,23,21,19,"pop"],[62,26,21,4],[63,0,22,3],[66,36,24,16],[67,0,25,4],[67,12,25,8],[67,17,25,13,"argsStack"],[67,26,25,8],[67,27,25,23,"length"],[67,33,25,8],[67,38,25,34],[67,39,25,4],[67,41,25,37],[67,47,25,43],[67,51,25,47,"Error"],[67,56,25,43],[67,111,25,37],[68,0,26,4],[68,12,26,10,"top"],[68,15,26,13],[68,18,26,16],[68,23,26,21,"argsStack"],[68,32,26,16],[68,33,26,31],[68,38,26,36,"argsStack"],[68,47,26,31],[68,48,26,46,"length"],[68,54,26,31],[68,57,26,55],[68,58,26,16],[68,59,26,4],[69,0,27,4],[69,15,27,11,"top"],[69,18,27,4],[70,0,28,3],[73,31,30,11,"value"],[73,36],[73,38,30,18],[74,0,31,4],[74,12,31,10,"top"],[74,15,31,13],[74,18,31,16],[74,23,31,21,"_getTopNode"],[74,34,31,16],[74,36,31,4],[76,0,32,4],[76,12,32,8,"top"],[76,15,32,11],[76,16,32,12,"setValue"],[76,24,32,4],[76,26,32,22],[77,0,33,6],[77,14,33,12,"callID"],[77,20,33,18],[77,23,33,21],[77,54,33,6],[78,0,34,6],[78,40,34,16],[78,45,34,21,"_prevCallID"],[78,56,34,6],[79,0,35,6,"top"],[79,10,35,6,"top"],[79,13,35,9],[79,14,35,10,"setValue"],[79,22,35,6],[79,23,35,19,"value"],[79,28,35,6],[80,0,36,6],[80,40,36,16,"callID"],[80,46,36,6],[81,0,37,5],[81,9,32,4],[81,15,37,11],[82,0,38,6],[82,16,38,12],[82,20,38,16,"Error"],[82,25,38,12],[82,47,38,41,"value"],[82,52,38,12],[82,143,38,6],[83,0,39,5],[84,0,40,3],[87,37,42,17],[88,0,43,4],[88,12,43,10,"callID"],[88,18,43,16],[88,21,43,19],[88,52,43,4],[89,0,44,4],[89,38,44,14],[89,43,44,19,"_prevCallID"],[89,54,44,4],[91,0,45,4],[91,12,45,10,"top"],[91,15,45,13],[91,18,45,16],[91,23,45,21,"_getTopNode"],[91,34,45,16],[91,36,45,4],[93,0,46,4],[93,12,46,10,"value"],[93,17,46,15],[93,20,46,18],[93,34,46,22,"top"],[93,37,46,18],[93,38,46,4],[94,0,47,4],[94,38,47,14,"callID"],[94,44,47,4],[95,0,48,4],[95,15,48,11,"value"],[95,20,48,4],[96,0,49,3],[99,30,51,10],[100,0,52,4],[100,12,52,10,"node"],[100,16,52,14],[100,19,52,17],[100,24,52,22,"_getTopNode"],[100,35,52,17],[100,37,52,4],[102,0,53,4],[102,32,54,6,"node"],[102,36,54,10],[102,48,54,22,"AnimatedClock"],[102,70,54,6],[102,74,54,39,"node"],[102,78,54,43],[102,90,54,55,"AnimatedParam"],[102,103,53,4],[102,166,55,65,"node"],[102,170,53,4],[103,0,57,4,"node"],[103,8,57,4,"node"],[103,12,57,8],[103,13,57,9,"start"],[103,18,57,4],[104,0,58,3],[107,29,60,9],[108,0,61,4],[108,12,61,10,"node"],[108,16,61,14],[108,19,61,17],[108,24,61,22,"_getTopNode"],[108,35,61,17],[108,37,61,4],[110,0,62,4],[110,32,63,6,"node"],[110,36,63,10],[110,48,63,22,"AnimatedClock"],[110,70,63,6],[110,74,63,39,"node"],[110,78,63,43],[110,90,63,55,"AnimatedParam"],[110,103,62,4],[110,166,64,65,"node"],[110,170,62,4],[111,0,66,4,"node"],[111,8,66,4,"node"],[111,12,66,8],[111,13,66,9,"stop"],[111,17,66,4],[112,0,67,3],[115,34,69,14],[116,0,70,4],[116,12,70,10,"node"],[116,16,70,14],[116,19,70,17],[116,24,70,22,"_getTopNode"],[116,35,70,17],[116,37,70,4],[118,0,72,4],[118,12,72,8,"node"],[118,16,72,12],[118,28,72,24,"AnimatedParam"],[118,41,72,4],[118,43,72,39],[119,0,73,6],[119,17,73,13,"node"],[119,21,73,17],[119,22,73,18,"isRunning"],[119,31,73,13],[119,33,73,6],[120,0,74,5],[122,0,75,4],[122,32,76,6,"node"],[122,36,76,10],[122,48,76,22,"AnimatedClock"],[122,70,75,4],[122,133,77,65,"node"],[122,137,75,4],[123,0,79,4],[123,15,79,11,"node"],[123,19,79,15],[123,20,79,16,"isStarted"],[123,29,79,11],[123,31,79,4],[124,0,80,3],[127,4,6,35,"AnimatedNode"],[127,26],[131,0,83,7],[131,11,83,16,"createAnimatedParam"],[131,30,83,7],[131,33,83,38],[132,0,84,2],[132,11,84,9],[132,15,84,13,"AnimatedParam"],[132,28,84,9],[132,30,84,2],[133,0,85,1]],"functionMap":{"names":["<global>","AnimatedParam","constructor","beginContext","endContext","_getTopNode","setValue","__onEvaluate","start","stop","isRunning","createAnimatedParam"],"mappings":"AAA;OCK;ECI;GDG;EEE;GFG;EGE;GHE;EIE;GJI;EKE;GLU;EME;GNO;EOE;GPO;EQE;GRO;ESE;GTW;CDC;OWE;CXE"}},"type":"js/module"}]}