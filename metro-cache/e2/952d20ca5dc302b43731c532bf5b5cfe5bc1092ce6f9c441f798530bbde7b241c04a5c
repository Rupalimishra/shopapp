{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireWildcard","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/defineProperty","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/assertThisInitialized","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/inherits","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"isAsync":false}},{"name":"react","data":{"isAsync":false}},{"name":"react-native","data":{"isAsync":false}},{"name":"react-navigation","data":{"isAsync":false}},{"name":"./TouchableItem","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireWildcard\");\n\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _defineProperty3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/defineProperty\"));\n\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/createClass\"));\n\n  var _assertThisInitialized2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/assertThisInitialized\"));\n\n  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"@babel/runtime/helpers/inherits\"));\n\n  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n\n  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8], \"@babel/runtime/helpers/getPrototypeOf\"));\n\n  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[9], \"react\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[10], \"react-native\");\n\n  var _reactNavigation = _$$_REQUIRE(_dependencyMap[11], \"react-navigation\");\n\n  var _TouchableItem = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12], \"./TouchableItem\"));\n\n  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\n  function _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n  function _defineProperty(obj, key, value) {\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n\n    return obj;\n  }\n\n  var DrawerNavigatorItems = function (_React$Component) {\n    (0, _inherits2.default)(DrawerNavigatorItems, _React$Component);\n\n    var _super = _createSuper(DrawerNavigatorItems);\n\n    function DrawerNavigatorItems() {\n      var _this;\n\n      (0, _classCallCheck2.default)(this, DrawerNavigatorItems);\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this = _super.call.apply(_super, [this].concat(args));\n\n      _defineProperty((0, _assertThisInitialized2.default)(_this), \"context\", void 0);\n\n      return _this;\n    }\n\n    (0, _createClass2.default)(DrawerNavigatorItems, [{\n      key: \"getActiveTintColor\",\n      value: function getActiveTintColor() {\n        var activeTintColor = this.props.activeTintColor;\n\n        if (!activeTintColor) {\n          return;\n        } else if (typeof activeTintColor === 'string') {\n          return activeTintColor;\n        }\n\n        return activeTintColor[this.context];\n      }\n    }, {\n      key: \"getInactiveTintColor\",\n      value: function getInactiveTintColor() {\n        var inactiveTintColor = this.props.inactiveTintColor;\n\n        if (!inactiveTintColor) {\n          return;\n        } else if (typeof inactiveTintColor === 'string') {\n          return inactiveTintColor;\n        }\n\n        return inactiveTintColor[this.context];\n      }\n    }, {\n      key: \"getActiveBackgroundColor\",\n      value: function getActiveBackgroundColor() {\n        var activeBackgroundColor = this.props.activeBackgroundColor;\n\n        if (!activeBackgroundColor) {\n          return;\n        } else if (typeof activeBackgroundColor === 'string') {\n          return activeBackgroundColor;\n        }\n\n        return activeBackgroundColor[this.context];\n      }\n    }, {\n      key: \"getInactiveBackgroundColor\",\n      value: function getInactiveBackgroundColor() {\n        var inactiveBackgroundColor = this.props.inactiveBackgroundColor;\n\n        if (!inactiveBackgroundColor) {\n          return;\n        } else if (typeof inactiveBackgroundColor === 'string') {\n          return inactiveBackgroundColor;\n        }\n\n        return inactiveBackgroundColor[this.context];\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var _this$props = this.props,\n            items = _this$props.items,\n            activeItemKey = _this$props.activeItemKey,\n            getLabel = _this$props.getLabel,\n            renderIcon = _this$props.renderIcon,\n            onItemPress = _this$props.onItemPress,\n            itemsContainerStyle = _this$props.itemsContainerStyle,\n            itemStyle = _this$props.itemStyle,\n            labelStyle = _this$props.labelStyle,\n            activeLabelStyle = _this$props.activeLabelStyle,\n            inactiveLabelStyle = _this$props.inactiveLabelStyle,\n            iconContainerStyle = _this$props.iconContainerStyle,\n            drawerPosition = _this$props.drawerPosition;\n        var activeTintColor = this.getActiveTintColor();\n        var activeBackgroundColor = this.getActiveBackgroundColor();\n        var inactiveTintColor = this.getInactiveTintColor();\n        var inactiveBackgroundColor = this.getInactiveBackgroundColor();\n        return React.createElement(_reactNative.View, {\n          style: [styles.container, itemsContainerStyle]\n        }, items.map(function (route, index) {\n          var _forceInset;\n\n          var focused = activeItemKey === route.key;\n          var color = focused ? activeTintColor : inactiveTintColor;\n          var backgroundColor = focused ? activeBackgroundColor : inactiveBackgroundColor;\n          var scene = {\n            route: route,\n            index: index,\n            focused: focused,\n            tintColor: color\n          };\n          var icon = renderIcon(scene);\n          var label = getLabel(scene);\n          var accessibilityLabel = typeof label === 'string' ? label : undefined;\n          var extraLabelStyle = focused ? activeLabelStyle : inactiveLabelStyle;\n          return React.createElement(_TouchableItem.default, {\n            key: route.key,\n            accessible: true,\n            accessibilityLabel: accessibilityLabel,\n            onPress: function onPress() {\n              onItemPress({\n                route: route,\n                focused: focused\n              });\n            },\n            delayPressIn: 0\n          }, React.createElement(_reactNavigation.SafeAreaView, {\n            style: [{\n              backgroundColor: backgroundColor\n            }, styles.item, itemStyle],\n            forceInset: (_forceInset = {}, (0, _defineProperty3.default)(_forceInset, drawerPosition, 'always'), (0, _defineProperty3.default)(_forceInset, drawerPosition === 'left' ? 'right' : 'left', 'never'), (0, _defineProperty3.default)(_forceInset, \"vertical\", 'never'), _forceInset)\n          }, icon ? React.createElement(_reactNative.View, {\n            style: [styles.icon, focused ? null : styles.inactiveIcon, iconContainerStyle]\n          }, icon) : null, typeof label === 'string' ? React.createElement(_reactNative.Text, {\n            style: [styles.label, {\n              color: color\n            }, labelStyle, extraLabelStyle]\n          }, label) : label));\n        }));\n      }\n    }]);\n    return DrawerNavigatorItems;\n  }(React.Component);\n\n  exports.default = DrawerNavigatorItems;\n\n  _defineProperty(DrawerNavigatorItems, \"defaultProps\", {\n    activeTintColor: {\n      light: '#2196f3',\n      dark: '#fff'\n    },\n    activeBackgroundColor: {\n      light: 'rgba(0, 0, 0, .04)',\n      dark: 'rgba(255, 255, 255, .04)'\n    },\n    inactiveTintColor: {\n      light: 'rgba(0, 0, 0, .87)',\n      dark: 'rgba(255, 255, 255, .87)'\n    },\n    inactiveBackgroundColor: {\n      light: 'transparent',\n      dark: 'transparent'\n    }\n  });\n\n  _defineProperty(DrawerNavigatorItems, \"contextType\", _reactNavigation.ThemeContext);\n\n  var styles = _reactNative.StyleSheet.create({\n    container: {\n      paddingVertical: 4\n    },\n    item: {\n      flexDirection: 'row',\n      alignItems: 'center'\n    },\n    icon: {\n      marginHorizontal: 16,\n      width: 24,\n      alignItems: 'center'\n    },\n    inactiveIcon: {\n      opacity: 0.62\n    },\n    label: {\n      margin: 16,\n      fontWeight: 'bold'\n    }\n  });\n});","lineCount":236,"map":[[25,0,3,0],[27,0,4,0],[29,0,5,0],[31,0,6,0],[37,0,1,0],[37,11,1,9,"_defineProperty"],[37,26,1,0],[37,27,1,25,"obj"],[37,30,1,0],[37,32,1,30,"key"],[37,35,1,0],[37,37,1,35,"value"],[37,42,1,0],[37,44,1,42],[38,0,1,44],[38,8,1,48,"key"],[38,11,1,51],[38,15,1,55,"obj"],[38,18,1,44],[38,20,1,60],[39,0,1,62,"Object"],[39,6,1,62,"Object"],[39,12,1,68],[39,13,1,69,"defineProperty"],[39,27,1,62],[39,28,1,84,"obj"],[39,31,1,62],[39,33,1,89,"key"],[39,36,1,62],[39,38,1,94],[40,0,1,96,"value"],[40,8,1,96,"value"],[40,13,1,101],[40,15,1,103,"value"],[40,20,1,94],[41,0,1,110,"enumerable"],[41,8,1,110,"enumerable"],[41,18,1,120],[41,20,1,122],[41,24,1,94],[42,0,1,128,"configurable"],[42,8,1,128,"configurable"],[42,20,1,140],[42,22,1,142],[42,26,1,94],[43,0,1,148,"writable"],[43,8,1,148,"writable"],[43,16,1,156],[43,18,1,158],[44,0,1,94],[44,7,1,62],[45,0,1,168],[45,5,1,44],[45,11,1,174],[46,0,1,176,"obj"],[46,6,1,176,"obj"],[46,9,1,179],[46,10,1,180,"key"],[46,13,1,179],[46,14,1,176],[46,17,1,187,"value"],[46,22,1,176],[47,0,1,195],[49,0,1,196],[49,11,1,203,"obj"],[49,14,1,196],[50,0,1,209],[52,6,11,21,"DrawerNavigatorItems"],[52,26],[57,0,12,2],[57,36,12,23],[58,0,12,23],[60,0,12,23],[62,0,12,23],[62,40,12,17,"args"],[62,44,12,23],[63,0,12,17,"args"],[63,8,12,17,"args"],[63,12,12,23],[64,0,12,23],[66,0,13,4],[66,54,13,13,"args"],[66,58,13,4],[68,0,15,4,"_defineProperty"],[68,6,15,4,"_defineProperty"],[68,21,15,19],[68,67,15,26],[68,76,15,19],[68,78,15,37],[68,83,15,42],[68,84,15,19],[68,85,15,4],[70,0,12,23],[71,0,16,3],[75,43,18,23],[76,0,18,23],[76,12,20,6,"activeTintColor"],[76,27,18,23],[76,30,21,8],[76,35,21,13,"props"],[76,40,18,23],[76,41,20,6,"activeTintColor"],[76,56,18,23],[78,0,23,4],[78,12,23,8],[78,13,23,9,"activeTintColor"],[78,28,23,4],[78,30,23,26],[79,0,24,6],[80,0,25,5],[80,9,23,4],[80,15,25,11],[80,19,25,15],[80,26,25,22,"activeTintColor"],[80,41,25,15],[80,46,25,42],[80,54,25,11],[80,56,25,52],[81,0,26,6],[81,17,26,13,"activeTintColor"],[81,32,26,6],[82,0,27,5],[84,0,29,4],[84,15,29,11,"activeTintColor"],[84,30,29,26],[84,31,29,27],[84,36,29,32,"context"],[84,43,29,26],[84,44,29,4],[85,0,30,3],[88,45,32,25],[89,0,32,25],[89,12,34,6,"inactiveTintColor"],[89,29,32,25],[89,32,35,8],[89,37,35,13,"props"],[89,42,32,25],[89,43,34,6,"inactiveTintColor"],[89,60,32,25],[91,0,37,4],[91,12,37,8],[91,13,37,9,"inactiveTintColor"],[91,30,37,4],[91,32,37,28],[92,0,38,6],[93,0,39,5],[93,9,37,4],[93,15,39,11],[93,19,39,15],[93,26,39,22,"inactiveTintColor"],[93,43,39,15],[93,48,39,44],[93,56,39,11],[93,58,39,54],[94,0,40,6],[94,17,40,13,"inactiveTintColor"],[94,34,40,6],[95,0,41,5],[97,0,43,4],[97,15,43,11,"inactiveTintColor"],[97,32,43,28],[97,33,43,29],[97,38,43,34,"context"],[97,45,43,28],[97,46,43,4],[98,0,44,3],[101,49,46,29],[102,0,46,29],[102,12,48,6,"activeBackgroundColor"],[102,33,46,29],[102,36,49,8],[102,41,49,13,"props"],[102,46,46,29],[102,47,48,6,"activeBackgroundColor"],[102,68,46,29],[104,0,51,4],[104,12,51,8],[104,13,51,9,"activeBackgroundColor"],[104,34,51,4],[104,36,51,32],[105,0,52,6],[106,0,53,5],[106,9,51,4],[106,15,53,11],[106,19,53,15],[106,26,53,22,"activeBackgroundColor"],[106,47,53,15],[106,52,53,48],[106,60,53,11],[106,62,53,58],[107,0,54,6],[107,17,54,13,"activeBackgroundColor"],[107,38,54,6],[108,0,55,5],[110,0,57,4],[110,15,57,11,"activeBackgroundColor"],[110,36,57,32],[110,37,57,33],[110,42,57,38,"context"],[110,49,57,32],[110,50,57,4],[111,0,58,3],[114,51,60,31],[115,0,60,31],[115,12,62,6,"inactiveBackgroundColor"],[115,35,60,31],[115,38,63,8],[115,43,63,13,"props"],[115,48,60,31],[115,49,62,6,"inactiveBackgroundColor"],[115,72,60,31],[117,0,65,4],[117,12,65,8],[117,13,65,9,"inactiveBackgroundColor"],[117,36,65,4],[117,38,65,34],[118,0,66,6],[119,0,67,5],[119,9,65,4],[119,15,67,11],[119,19,67,15],[119,26,67,22,"inactiveBackgroundColor"],[119,49,67,15],[119,54,67,50],[119,62,67,11],[119,64,67,60],[120,0,68,6],[120,17,68,13,"inactiveBackgroundColor"],[120,40,68,6],[121,0,69,5],[123,0,71,4],[123,15,71,11,"inactiveBackgroundColor"],[123,38,71,34],[123,39,71,35],[123,44,71,40,"context"],[123,51,71,34],[123,52,71,4],[124,0,72,3],[127,31,74,11],[128,0,74,11],[128,26,88,8],[128,31,88,13,"props"],[128,36,74,11],[129,0,74,11],[129,12,76,6,"items"],[129,17,74,11],[129,32,76,6,"items"],[129,37,74,11],[130,0,74,11],[130,12,77,6,"activeItemKey"],[130,25,74,11],[130,40,77,6,"activeItemKey"],[130,53,74,11],[131,0,74,11],[131,12,78,6,"getLabel"],[131,20,74,11],[131,35,78,6,"getLabel"],[131,43,74,11],[132,0,74,11],[132,12,79,6,"renderIcon"],[132,22,74,11],[132,37,79,6,"renderIcon"],[132,47,74,11],[133,0,74,11],[133,12,80,6,"onItemPress"],[133,23,74,11],[133,38,80,6,"onItemPress"],[133,49,74,11],[134,0,74,11],[134,12,81,6,"itemsContainerStyle"],[134,31,74,11],[134,46,81,6,"itemsContainerStyle"],[134,65,74,11],[135,0,74,11],[135,12,82,6,"itemStyle"],[135,21,74,11],[135,36,82,6,"itemStyle"],[135,45,74,11],[136,0,74,11],[136,12,83,6,"labelStyle"],[136,22,74,11],[136,37,83,6,"labelStyle"],[136,47,74,11],[137,0,74,11],[137,12,84,6,"activeLabelStyle"],[137,28,74,11],[137,43,84,6,"activeLabelStyle"],[137,59,74,11],[138,0,74,11],[138,12,85,6,"inactiveLabelStyle"],[138,30,74,11],[138,45,85,6,"inactiveLabelStyle"],[138,63,74,11],[139,0,74,11],[139,12,86,6,"iconContainerStyle"],[139,30,74,11],[139,45,86,6,"iconContainerStyle"],[139,63,74,11],[140,0,74,11],[140,12,87,6,"drawerPosition"],[140,26,74,11],[140,41,87,6,"drawerPosition"],[140,55,74,11],[141,0,89,4],[141,12,89,10,"activeTintColor"],[141,27,89,25],[141,30,89,28],[141,35,89,33,"getActiveTintColor"],[141,53,89,28],[141,55,89,4],[142,0,90,4],[142,12,90,10,"activeBackgroundColor"],[142,33,90,31],[142,36,90,34],[142,41,90,39,"getActiveBackgroundColor"],[142,65,90,34],[142,67,90,4],[143,0,91,4],[143,12,91,10,"inactiveTintColor"],[143,29,91,27],[143,32,91,30],[143,37,91,35,"getInactiveTintColor"],[143,57,91,30],[143,59,91,4],[144,0,92,4],[144,12,92,10,"inactiveBackgroundColor"],[144,35,92,33],[144,38,92,36],[144,43,92,41,"getInactiveBackgroundColor"],[144,69,92,36],[144,71,92,4],[145,0,93,4],[145,15,93,24,"React"],[145,20,93,29],[145,21,93,30,"createElement"],[145,34,93,24],[145,35,93,44,"View"],[145,52,93,24],[145,54,93,50],[146,0,94,6,"style"],[146,10,94,6,"style"],[146,15,94,11],[146,17,94,13],[146,18,94,14,"styles"],[146,24,94,20],[146,25,94,21,"container"],[146,34,94,13],[146,36,94,32,"itemsContainerStyle"],[146,55,94,13],[147,0,93,50],[147,9,93,24],[147,11,95,7,"items"],[147,16,95,12],[147,17,95,13,"map"],[147,20,95,7],[147,21,95,17],[147,31,95,18,"route"],[147,36,95,17],[147,38,95,25,"index"],[147,43,95,17],[147,45,95,35],[148,0,95,35],[150,0,96,6],[150,14,96,12,"focused"],[150,21,96,19],[150,24,96,22,"activeItemKey"],[150,37,96,35],[150,42,96,40,"route"],[150,47,96,45],[150,48,96,46,"key"],[150,51,96,6],[151,0,97,6],[151,14,97,12,"color"],[151,19,97,17],[151,22,97,20,"focused"],[151,29,97,27],[151,32,97,30,"activeTintColor"],[151,47,97,27],[151,50,97,48,"inactiveTintColor"],[151,67,97,6],[152,0,98,6],[152,14,98,12,"backgroundColor"],[152,29,98,27],[152,32,98,30,"focused"],[152,39,98,37],[152,42,98,40,"activeBackgroundColor"],[152,63,98,37],[152,66,98,64,"inactiveBackgroundColor"],[152,89,98,6],[153,0,99,6],[153,14,99,12,"scene"],[153,19,99,17],[153,22,99,20],[154,0,100,8,"route"],[154,12,100,8,"route"],[154,17,100,13],[154,19,100,8,"route"],[154,24,99,20],[155,0,101,8,"index"],[155,12,101,8,"index"],[155,17,101,13],[155,19,101,8,"index"],[155,24,99,20],[156,0,102,8,"focused"],[156,12,102,8,"focused"],[156,19,102,15],[156,21,102,8,"focused"],[156,28,99,20],[157,0,103,8,"tintColor"],[157,12,103,8,"tintColor"],[157,21,103,17],[157,23,103,19,"color"],[158,0,99,20],[158,11,99,6],[159,0,105,6],[159,14,105,12,"icon"],[159,18,105,16],[159,21,105,19,"renderIcon"],[159,31,105,29],[159,32,105,30,"scene"],[159,37,105,29],[159,38,105,6],[160,0,106,6],[160,14,106,12,"label"],[160,19,106,17],[160,22,106,20,"getLabel"],[160,30,106,28],[160,31,106,29,"scene"],[160,36,106,28],[160,37,106,6],[161,0,107,6],[161,14,107,12,"accessibilityLabel"],[161,32,107,30],[161,35,107,33],[161,42,107,40,"label"],[161,47,107,33],[161,52,107,50],[161,60,107,33],[161,63,107,61,"label"],[161,68,107,33],[161,71,107,69,"undefined"],[161,80,107,6],[162,0,108,6],[162,14,108,12,"extraLabelStyle"],[162,29,108,27],[162,32,108,30,"focused"],[162,39,108,37],[162,42,108,40,"activeLabelStyle"],[162,58,108,37],[162,61,108,59,"inactiveLabelStyle"],[162,79,108,6],[163,0,109,6],[163,17,109,26,"React"],[163,22,109,31],[163,23,109,32,"createElement"],[163,36,109,26],[163,37,109,46,"TouchableItem"],[163,59,109,26],[163,61,109,61],[164,0,110,8,"key"],[164,12,110,8,"key"],[164,15,110,11],[164,17,110,13,"route"],[164,22,110,18],[164,23,110,19,"key"],[164,26,109,61],[165,0,111,8,"accessible"],[165,12,111,8,"accessible"],[165,22,111,18],[165,24,111,20],[165,28,109,61],[166,0,112,8,"accessibilityLabel"],[166,12,112,8,"accessibilityLabel"],[166,30,112,26],[166,32,112,28,"accessibilityLabel"],[166,50,109,61],[167,0,113,8,"onPress"],[167,12,113,8,"onPress"],[167,19,113,15],[167,21,113,17],[167,40,113,23],[168,0,114,10,"onItemPress"],[168,14,114,10,"onItemPress"],[168,25,114,21],[168,26,114,22],[169,0,115,12,"route"],[169,16,115,12,"route"],[169,21,115,17],[169,23,115,12,"route"],[169,28,114,22],[170,0,116,12,"focused"],[170,16,116,12,"focused"],[170,23,116,19],[170,25,116,12,"focused"],[171,0,114,22],[171,15,114,21],[171,16,114,10],[172,0,118,9],[172,13,109,61],[173,0,119,8,"delayPressIn"],[173,12,119,8,"delayPressIn"],[173,24,119,20],[173,26,119,22],[174,0,109,61],[174,11,109,26],[174,13,120,22,"React"],[174,18,120,27],[174,19,120,28,"createElement"],[174,32,120,22],[174,33,120,42,"SafeAreaView"],[174,62,120,22],[174,64,120,56],[175,0,121,8,"style"],[175,12,121,8,"style"],[175,17,121,13],[175,19,121,15],[175,20,121,16],[176,0,122,10,"backgroundColor"],[176,14,122,10,"backgroundColor"],[176,29,122,25],[176,31,122,10,"backgroundColor"],[177,0,121,16],[177,13,121,15],[177,15,123,11,"styles"],[177,21,123,17],[177,22,123,18,"item"],[177,26,121,15],[177,28,123,24,"itemStyle"],[177,37,121,15],[177,38,120,56],[178,0,124,8,"forceInset"],[178,12,124,8,"forceInset"],[178,22,124,18],[178,86,125,11,"drawerPosition"],[178,100,124,18],[178,102,125,28],[178,110,124,18],[178,156,126,11,"drawerPosition"],[178,170,126,25],[178,175,126,30],[178,181,126,11],[178,184,126,39],[178,191,126,11],[178,194,126,49],[178,200,124,18],[178,202,126,58],[178,209,124,18],[178,267,127,20],[178,274,124,18],[179,0,120,56],[179,11,120,22],[179,13,129,9,"icon"],[179,17,129,13],[179,20,129,29,"React"],[179,25,129,34],[179,26,129,35,"createElement"],[179,39,129,29],[179,40,129,49,"View"],[179,57,129,29],[179,59,129,55],[180,0,130,8,"style"],[180,12,130,8,"style"],[180,17,130,13],[180,19,130,15],[180,20,130,16,"styles"],[180,26,130,22],[180,27,130,23,"icon"],[180,31,130,15],[180,33,130,29,"focused"],[180,40,130,36],[180,43,130,39],[180,47,130,36],[180,50,130,46,"styles"],[180,56,130,52],[180,57,130,53,"inactiveIcon"],[180,69,130,15],[180,71,130,67,"iconContainerStyle"],[180,89,130,15],[181,0,129,55],[181,11,129,29],[181,13,131,9,"icon"],[181,17,129,29],[181,18,129,13],[181,21,131,17],[181,25,120,22],[181,27,131,23],[181,34,131,30,"label"],[181,39,131,23],[181,44,131,40],[181,52,131,23],[181,55,131,64,"React"],[181,60,131,69],[181,61,131,70,"createElement"],[181,74,131,64],[181,75,131,84,"Text"],[181,92,131,64],[181,94,131,90],[182,0,132,8,"style"],[182,12,132,8,"style"],[182,17,132,13],[182,19,132,15],[182,20,132,16,"styles"],[182,26,132,22],[182,27,132,23,"label"],[182,32,132,15],[182,34,132,30],[183,0,133,10,"color"],[183,14,133,10,"color"],[183,19,133,15],[183,21,133,10,"color"],[184,0,132,30],[184,13,132,15],[184,15,134,11,"labelStyle"],[184,25,132,15],[184,27,134,23,"extraLabelStyle"],[184,42,132,15],[185,0,131,90],[185,11,131,64],[185,13,135,9,"label"],[185,18,131,64],[185,19,131,23],[185,22,135,18,"label"],[185,27,120,22],[185,28,109,26],[185,29,109,6],[186,0,136,5],[186,9,95,7],[186,10,93,24],[186,11,93,4],[187,0,137,3],[190,4,11,50,"React"],[190,9,11,55],[190,10,11,56,"Component"],[190,19],[194,0,141,0,"_defineProperty"],[194,2,141,0,"_defineProperty"],[194,17,141,15],[194,18,141,16,"DrawerNavigatorItems"],[194,38,141,15],[194,40,141,38],[194,54,141,15],[194,56,141,54],[195,0,142,2,"activeTintColor"],[195,4,142,2,"activeTintColor"],[195,19,142,17],[195,21,142,19],[196,0,143,4,"light"],[196,6,143,4,"light"],[196,11,143,9],[196,13,143,11],[196,22,142,19],[197,0,144,4,"dark"],[197,6,144,4,"dark"],[197,10,144,8],[197,12,144,10],[198,0,142,19],[198,5,141,54],[199,0,146,2,"activeBackgroundColor"],[199,4,146,2,"activeBackgroundColor"],[199,25,146,23],[199,27,146,25],[200,0,147,4,"light"],[200,6,147,4,"light"],[200,11,147,9],[200,13,147,11],[200,33,146,25],[201,0,148,4,"dark"],[201,6,148,4,"dark"],[201,10,148,8],[201,12,148,10],[202,0,146,25],[202,5,141,54],[203,0,150,2,"inactiveTintColor"],[203,4,150,2,"inactiveTintColor"],[203,21,150,19],[203,23,150,21],[204,0,151,4,"light"],[204,6,151,4,"light"],[204,11,151,9],[204,13,151,11],[204,33,150,21],[205,0,152,4,"dark"],[205,6,152,4,"dark"],[205,10,152,8],[205,12,152,10],[206,0,150,21],[206,5,141,54],[207,0,154,2,"inactiveBackgroundColor"],[207,4,154,2,"inactiveBackgroundColor"],[207,27,154,25],[207,29,154,27],[208,0,155,4,"light"],[208,6,155,4,"light"],[208,11,155,9],[208,13,155,11],[208,26,154,27],[209,0,156,4,"dark"],[209,6,156,4,"dark"],[209,10,156,8],[209,12,156,10],[210,0,154,27],[211,0,141,54],[211,3,141,15],[211,4,141,0],[213,0,160,0,"_defineProperty"],[213,2,160,0,"_defineProperty"],[213,17,160,15],[213,18,160,16,"DrawerNavigatorItems"],[213,38,160,15],[213,40,160,38],[213,53,160,15],[213,55,160,53,"ThemeContext"],[213,84,160,15],[213,85,160,0],[215,0,162,0],[215,6,162,6,"styles"],[215,12,162,12],[215,15,162,15,"StyleSheet"],[215,39,162,26,"create"],[215,45,162,15],[215,46,162,33],[216,0,163,2,"container"],[216,4,163,2,"container"],[216,13,163,11],[216,15,163,13],[217,0,164,4,"paddingVertical"],[217,6,164,4,"paddingVertical"],[217,21,164,19],[217,23,164,21],[218,0,163,13],[218,5,162,33],[219,0,166,2,"item"],[219,4,166,2,"item"],[219,8,166,6],[219,10,166,8],[220,0,167,4,"flexDirection"],[220,6,167,4,"flexDirection"],[220,19,167,17],[220,21,167,19],[220,26,166,8],[221,0,168,4,"alignItems"],[221,6,168,4,"alignItems"],[221,16,168,14],[221,18,168,16],[222,0,166,8],[222,5,162,33],[223,0,170,2,"icon"],[223,4,170,2,"icon"],[223,8,170,6],[223,10,170,8],[224,0,171,4,"marginHorizontal"],[224,6,171,4,"marginHorizontal"],[224,22,171,20],[224,24,171,22],[224,26,170,8],[225,0,172,4,"width"],[225,6,172,4,"width"],[225,11,172,9],[225,13,172,11],[225,15,170,8],[226,0,173,4,"alignItems"],[226,6,173,4,"alignItems"],[226,16,173,14],[226,18,173,16],[227,0,170,8],[227,5,162,33],[228,0,175,2,"inactiveIcon"],[228,4,175,2,"inactiveIcon"],[228,16,175,14],[228,18,175,16],[229,0,180,4,"opacity"],[229,6,180,4,"opacity"],[229,13,180,11],[229,15,180,13],[230,0,175,16],[230,5,162,33],[231,0,182,2,"label"],[231,4,182,2,"label"],[231,9,182,7],[231,11,182,9],[232,0,183,4,"margin"],[232,6,183,4,"margin"],[232,12,183,10],[232,14,183,12],[232,16,182,9],[233,0,184,4,"fontWeight"],[233,6,184,4,"fontWeight"],[233,16,184,14],[233,18,184,16],[234,0,182,9],[235,0,162,33],[235,3,162,15],[235,4,162,0]],"functionMap":{"names":["_defineProperty","<global>","DrawerNavigatorItems","constructor","getActiveTintColor","getInactiveTintColor","getActiveBackgroundColor","getInactiveBackgroundColor","render","items.map$argument_0","React.createElement$argument_1.onPress"],"mappings":"AAA,iNC;eCU;ECC;GDI;EEE;GFY;EGE;GHY;EIE;GJY;EKE;GLY;EME;iBCqB;iBCkB;SDK;KDkB;GNC;CDE"}},"type":"js/module"}]}